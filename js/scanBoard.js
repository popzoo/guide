(function () {
    const curDay = new Date();
    const lastDay = new Date(new Date(curDay.getTime()).setHours(0, 0, 0, 0) - 1800 * 1000); //昨天23点
    var initTime = new Date().getTime();
    var firePieData = {
        fireNode: 0,
        fireRoom: 0,
        dailyDanmu: 0,
        dailyJump: 0,
        awardUser: 0,
        activeUser: 0
    };
    var cos = "";
    // var envFlag = true; //false test, true product
    var serverUrl = document.location.protocol + "//" + document.domain;
    //============================================================ 
    //========================= 加载等待效果 ====================== 
    //============================================================     
    $(".animsition").animsition({
        inClass: 'fade-in',
        outClass: 'fade-out',
        inDuration: 500,
        outDuration: 3000,
        // e.g. linkElement   :   'a:not([target="_blank"]):not([href^=#])'
        loading: false,
        loadingParentElement: 'body', //animsition wrapper element
        loadingClass: 'animsition-loading',
        unSupportCss: ['animation-duration',
            '-webkit-animation-duration',
            '-o-animation-duration'
        ],
        //"unSupportCss" option allows you to disable the "animsition" in case the css property in the array is not supported by your browser.
        //The default setting is to disable the "animsition" in a browser that does not support "animation-duration".
        overlay: false,
        overlayClass: 'animsition-overlay-slide',
        overlayParentElement: 'body'
    });
    document.onreadystatechange = subSomething;

    function subSomething() {
        if (document.readyState == "complete") {
            $('#loader').hide();
        }
    }
    //============================================================ 
    //================ init config and check auth ================ 
    //============================================================     
    // get filter room and cos config
    (function authCheck() {
        if (localStorage.getItem('token') != null) {
            initParam();
            let signOut = document.querySelector('.signOut');
            if (signOut != null) {
                signOut.addEventListener("click", function () {
                    localStorage.removeItem('token')
                    location.reload();
                })
            }
        } else {
            let pwd = window.prompt("🔔郑重警告：\n🔊此页面保密级别为【㊙绝密】，仅供特职人员专用！\n🔊闲杂人等禁止入内浏览，否则触发上门查水表业务！", "");
            if (pwd != null && pwd.trim() != "") {
                let reqUrl = serverUrl + '/getoauth';
                let content = window.btoa(new Date().getFullYear().toString()) + window.btoa(pwd.trim());
                content = 'secret=' + window.btoa(content.replace('=', ''));
                fetch(reqUrl, {
                    method: 'POST',
                    mode: 'cors',
                    cache: 'no-store',
                    // headers: new Headers({'Content-Type': 'application/json'}),
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'
                    },
                    credentials: 'same-origin',
                    body: content
                }).then(res => {
                    return res.json();
                }).then(json => {
                    if (json.msg == "success") {
                        localStorage.setItem('token', json.token);
                        authCheck();
                    } else {
                        localStorage.removeItem('token');
                        if (json.code == 401) {
                            alert("🤢密码错误，请重新输入,你还有" + json.count + "次机会");
                        } else if (json.code == 402) {
                            alert("😡密码错误超过5次，请30min后重试");
                        }
                    }
                }).catch(err => {
                    console.error('请求错误', err);
                })
            }
        }
    })();
    function initParam(retry) {
        let paramUrl = retry ? 'https://popzoo.glitch.me/initparam' : 'https://param.firenet.workers.dev';
        fetch(paramUrl, {
            method: 'GET',
            mode: 'cors',
            cache: 'default'
        }).then((res) => {
            return res.json()
        }).then((json) => {
            let domainUrl = window.atob(json.domainUrl);
            if (document.URL.indexOf(domainUrl) > -1) {
                serverUrl = window.atob(json.tlsoffer);
            }
            getCosKey();
        }).catch((error) => {
            if (retry) {
                console.error("Param Request Failure", error);
            } else {
                initParam(true);
            }
        });
    }
    function getCosKey() {
        let reqUrl = serverUrl + '/getcoskey';
        fetch(reqUrl, {
            method: 'GET',
            mode: 'cors',
            cache: 'default',
            headers: {
                'Authorization': localStorage.getItem('token')
            },
            credentials: 'same-origin'
        }).then(res => {
            return res.json();
        }).then(json => {
            let secId = json.secId != undefined ? window.atob(json.secId) : '';
            let secKy = json.secKy != undefined ? window.atob(json.secKy.substr(4)) : '';
            cos = new COS({
                SecretId: secId,
                SecretKey: secKy
            });
            document.getElementsByClassName('scanboardWp')[0].style.visibility = 'visible';
            getUserNumber(true);
            getFireLottoList(false, false); //获取昨日抽奖
            getFireLottoList(false, true); //获取今日抽奖                  
            getFireLottoList(true, false); //获取昨日火力
            getFireLottoList(true, true); //获取今日火力
            GitHubDelayMonitor();
            AIDelayMonitor();
            getServerDelay();
        }).catch(err => {
            console.error('请求错误', err);
        })
    }
    //============================================================ 
    //========================== util area ======================= 
    //============================================================ 
    //右上角时间
    setInterval(function () {
        let myDate = new Date();
        var myDay = myDate.getDay(); //获取当前星期X(0-6,0代表星期天)
        var week = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];
        var showTime = dateFormat("YYYY-mm-dd", myDate) + '&nbsp;&nbsp;' + week[myDay] + '&nbsp;&nbsp;' + dateFormat("HH:MM:SS", myDate);
        $('.topTime').html(showTime);
    }, 600);
    //圆圈内跳动数字渲染速度
    function totalNum(obj, speed) {
        var singalNum = 0;
        var timer;
        var totalNum = obj.attr('total');
        if (totalNum) {
            timer = setInterval(function () {
                singalNum += speed;
                if (singalNum >= totalNum) {
                    singalNum = totalNum;
                    clearInterval(timer);
                }
                obj.html(singalNum);
            }, 1);
        }
    }
    // time format util
    function dateFormat(fmt, date) {
        let ret;
        let opt = {
            "Y+": date.getFullYear().toString(),
            "m+": (date.getMonth() + 1).toString(),
            "d+": date.getDate().toString(),
            "H+": date.getHours().toString(),
            "M+": date.getMinutes().toString(),
            "S+": date.getSeconds().toString()
        }; // 有其他格式化字符需求可以继续添加，必须转化成字符串
        for (let k in opt) {
            ret = new RegExp("(" + k + ")").exec(fmt);
            if (ret) {
                fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, "0")))
            };
        };
        return fmt;
    }
    // set cookie
    function setCookie(name, value) {
        //document.cookie.setPath("/");
        var exp = new Date();
        exp.setTime(exp.getTime() + 365 * 24 * 60 * 60 * 1000);
        document.cookie = name + "=" + escape(value) + ";  path=/; expires=" + exp.toGMTString(); //domain=popzoo.xyz;
    }
    // get cookie
    function getCookie(name) {
        //document.cookie.setPath("/");
        var arr, reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
        return (arr = document.cookie.match(reg)) ? unescape(arr[2]) : null;
    }
    // del cookie
    function delCookie(name) {
        var exp = new Date();
        exp.setTime(exp.getTime() - 1);
        var cval = getCookie(name);
        if (cval != null) document.cookie = name + "=" + cval + ";  path=/; expires=" + exp.toGMTString(); //domain=popzoo.xyz;
    }
    //============================================================ 
    //======================= 羊王榜绘图渲染 ======================
    //============================================================
    var myChart0 = echarts.init(document.getElementById('myMap'));

    function renderFishBallRank(newArr) {
        newArr.sort(function (a, b) {
            return b.fishBallIncome - a.fishBallIncome;
        });
        var dataX = [],
            dataY = [],
            dataZ = [];
        for (let i = 0; i < 10; i++) {
            if (newArr[i] != undefined) {
                dataX.push(newArr[i].uname);
                dataY.push({
                    value: newArr[i].fishBallIncome, // > 1 ? newArr[i].fishBallIncome : 1,
                    url: newArr[i].uid
                });
            } else {
                dataX.push('『缺席』');
                dataY.push({
                    value: 10 - i,
                    url: '99999'
                });
            }
        }
        var app = {};
        option = null;
        var pathSymbols = {
            sheep: 'path://M1167.807188 701.707003c-3.354317 15.369554-16.937414 24.505355-69.023543 24.505355-13.605711 0-30.023017-0.663326-49.380062-1.959825a449.252283 449.252283 0 0 1-2.208572 5.562889c94.576651 84.476012 105.86826 116.353326 92.714817 137.323458-6.572953 10.492604-19.862077 14.736379-37.033163 14.736379-33.942668 0-83.036294-16.568062-125.579581-34.116037-83.571478 101.941072-210.620928 167.158031-352.700731 167.15803-109.704995 0-210.462634-38.872383-289.164699-103.501394-48.498141 25.575721-82.704632 38.058302-106.109469 38.058302-13.492644 0-23.412376-4.138247-30.430059-12.286598-25.899846-30.075782 17.276615-98.435999 41.857348-132.393743-45.204127-70.463261-71.533627-154.049814-71.533627-243.704288 0-21.301794 1.560323-42.83726 4.643279-64.289811-34.89243-0.482419-49.734338-6.30913-54.385155-20.103285-3.783971-11.231307 1.50002-22.017885 15.708755-32.058221 1.763843-1.394491 3.30909-2.683453 4.665892-3.874424-19.311818-0.278898-52.515783-4.153322-77.639237-24.93501-16.914801-13.990138-27.309413-32.970293-31.010468-56.503273-21.889742-11.954935-32.427572-39.807069-23.563132-66.325014 4.658354-13.929836 13.944911-25.492806 26.133518-32.570791 12.844394-7.447337 27.35464-9.090575 40.832208-4.665892 32.578328-22.424925 74.66181-29.600901 96.634468-31.771785 4.36438-19.688707 15.52031-37.146229 32.796924-51.083602 21.286719-17.178623 50.985611-19.88469 79.418155-7.311657 3.912113 1.748767 19.907303 5.314142 61.048561-21.603306 27.369715-17.909789 57.151524-25.892309 88.727326-23.842029 8.713685-22.093262 31.025544-64.591322 80.480984-91.395704 58.138974-31.500424 134.278191-31.274291 226.307069 0.701015 6.354357 2.208572 12.678563 4.869412 18.806786 7.922217 26.367189 13.123292 123.868503 67.953177 152.836229 171.416882l2.570387 2.065354c105.340615 86.654434 165.740926 214.284294 165.740926 350.228336 0 24.233995-1.967363 48.02326-5.653343 71.247191 100.335522 37.651261 95.579177 59.812363 93.491209 69.370281z m-58.28973 146.738158c-2.811596-7.831764-16.108257-30.927552-76.892995-86.172015a454.249838 454.249838 0 0 1-34.214029 57.528413c47.714211 18.821862 95.420883 31.13861 111.107024 28.643602z m-884.657645 67.010953c0.090453-0.143218 1.123131 0.474881 4.386994 0.47488 8.110662 0 29.465221-3.459846 79.199559-28.673753a457.604154 457.604154 0 0 1-47.028272-52.772067c-23.811879 35.307008-40.786982 71.985894-36.558281 80.97094z m-71.62408-474.97876v-0.097992l-0.203521 0.007538a1.206046 1.206046 0 0 0 0.203521 0.090454zM64.048601 287.889871a14.389641 14.389641 0 0 0-4.469909-0.71609c-3.746282 0-6.904616 1.43218-8.728761 2.487471-5.057857 2.9322-8.96997 7.914679-11.012711 14.027827-3.881962 11.63081 0.633174 24.038012 9.851892 27.11343 5.615654 1.839221 10.673511-0.316587 13.19867-1.77138 5.050319-2.9322 8.962432-7.922217 11.005173-14.035365 0.746241-2.231186 1.206046-4.522674 1.36434-6.8217 0.663326-9.527767-3.949802-17.8721-11.208694-20.284193zM523.831177 62.10291c-49.040862 29.94764-62.292296 79.908112-62.427977 80.435757l-0.188444 0.678401c-2.675915 9.090575-2.706067 15.904737-0.090454 18.708795 5.216151 5.615654 23.404838 5.472436 33.987895 3.226174 25.862157-4.861875 50.020774-8.299107 72.498464-10.33431 10.115714-22.922419 11.585583-42.249313 4.236238-57.490724-10.447377-21.69376-36.354761-31.703945-48.015722-35.224093z m171.688242-10.975022c-49.52328-13.319275-92.646977-15.512772-128.92636-6.595566 13.590635 8.427249 27.309413 20.563091 35.736663 37.900008 10.002647 20.593242 10.741351 44.186525 2.336715 70.365269 27.309413-0.542721 51.581097 1.424642 72.815051 5.887014 27.671227-21.18119 23.728963-77.654312 18.037931-107.556725z m139.803391 86.473526c-32.126061-37.161305-71.367796-59.865128-91.667064-69.965766a128.798217 128.798217 0 0 0-12.14338-5.11816c3.603064 29.879799 4.386994 76.184443-17.947478 107.292903 21.422399 9.279019 38.261822 22.266632 50.337362 39.05329a103.214958 103.214958 0 0 1 11.76649 21.354559c29.517986-0.78393 49.545894-8.412174 59.412861-22.847041 16.213786-23.728963 3.294014-61.674198 0.241209-69.769785z m38.653787 64.425491a76.22967 76.22967 0 0 1-10.839342 24.384751c-15.497696 22.673672-42.596051 35.111026-80.473446 37.281909a89.895683 89.895683 0 0 1-9.369473 42.520674 93.167084 93.167084 0 0 1-18.286678 24.837018c19.296742 17.751495 60.144026 47.277019 108.762771 36.980397 1.198509-2.66084 2.495008-5.268915 3.557837-8.020208 24.784253-63.603872 22.251556-115.885983 6.648331-157.984541zM726.28114 350.58167c-12.181069 5.291529-25.734015 8.291569-40.10858 8.638308a127.675087 127.675087 0 0 1-25.168681-1.997515c-9.045348 34.116037-15.384629 82.885539-0.972375 104.496383 4.582976 6.882002 11.223769 10.515217 20.615856 11.547894 38.3372 1.183433 74.292458-9.964958 103.365714-23.563131a161.828813 161.828813 0 0 0 57.618866-45.400109c-55.138934-0.542721-97.27518-35.631133-115.3508-53.72183z m193.419691-89.126828c1.062828 33.053209-4.794034 69.913002-20.728922 110.805512-18.761559 48.166478-54.46807 86.548905-100.546581 108.076833-38.231671 17.8721-75.89047 26.751617-111.83819 26.751617-2.404555 0-4.756345-0.256285-7.145825-0.331663l-0.030151 0.459805a73.742199 73.742199 0 0 1-5.743796-0.731165c-48.558443-2.924663-93.739956-22.191254-132.702792-57.860076-23.864643-21.867129-38.518107-51.822306-40.199034-82.154373a111.808039 111.808039 0 0 1 7.251354-46.651383 66.257174 66.257174 0 0 1 49.003172-41.631214 66.558686 66.558686 0 0 1 61.59882 19.115836c18.565577 19.266591 41.156333 28.884811 66.724517 28.093343 25.636024-0.618099 47.156414-13.424804 57.566102-34.266793 10.010185-20.035446 7.613168-42.829723-6.580491-62.563657-30.407445-42.226699-113.700024-52.983126-234.48557-30.271765-4.085482 0.904535-44.691557 8.977508-65.533547-13.274048-5.691031-6.090534-11.216231-16.047955-10.922257-31.236601-22.048036-0.293974-42.927714 5.834249-62.262145 18.482661-40.259336 26.352114-70.825075 34.289407-93.468596 24.233994-16.545449-7.326732-33.105974-6.316668-44.269441 2.698529-14.22381 11.487592-21.505315 25.055614-22.244018 41.480458l-0.71609 15.821822-15.912275 0.331662c-0.550259 0.015076-48.716737 1.243735-84.717221 21.55808a56.518349 56.518349 0 0 1 7.326732 32.126061 61.568669 61.568669 0 0 1-3.030192 15.188646c-4.658354 13.91476-13.937374 25.47773-26.133518 32.555715a53.450469 53.450469 0 0 1-12.814243 5.366907c3.211099 10.635822 8.570467 19.37212 16.628365 26.080753 25.538032 21.233954 67.478296 16.88465 67.915488 16.839423l1.56786-0.173369 1.6357 0.105529c9.934807 0.761317 22.937495 6.165912 26.849608 18.897239 4.311616 14.005214-4.522674 26.744079-15.716292 37.342212 6.640793 0.309049 15.52031 0.391965 27.339564 0.030151l21.135963-0.670863-0.015075 0.052764c36.271845-2.359328 117.205096-13.326813 201.545428-63.23452a16.997716 16.997716 0 0 1 23.26162 5.909627 16.88465 16.88465 0 0 1-5.93224 23.178705c-97.976194 57.973143-189.846778 67.161709-225.033183 68.435595a419.869977 419.869977 0 0 0-5.170923 64.6667c0 231.591059 189.05531 419.99812 421.437837 419.99812 232.37499 0 421.4303-188.407061 421.4303-419.99812 0-113.609571-45.709158-220.857246-126.325822-299.634689zM628.80244 346.360508a127.275584 127.275584 0 0 1-34.673834-25.636024 32.201439 32.201439 0 0 0-23.427451-10.093101c-2.261337 0-4.560363 0.226134-6.859389 0.701015-11.25392 2.291488-20.02037 9.746362-24.060626 20.427411a78.656838 78.656838 0 0 0-5.125697 32.849689c1.198509 21.603306 11.872019 43.153848 29.284314 59.103811 19.311818 17.683655 39.136206 29.827035 58.915367 37.681412-12.030313-38.02815-1.047753-89.49618 5.947316-115.034213z m438.752142 319.639984a449.026149 449.026149 0 0 1-6.716171 25.07069c31.100921 1.80907 50.10369 1.454793 61.402837 0.497494-12.874545-7.560403-33.271805-17.171086-54.686666-25.568184z m-459.021259 257.573822c-9.030272 3.505072-18.030394 5.25384-26.811919 5.253839a64.485793 64.485793 0 0 1-29.811959-7.289043c-48.22678-24.852094-65.933049-104.707441-67.794884-113.737713a16.922339 16.922339 0 0 1 13.191133-19.967605 17.012792 17.012792 0 0 1 20.058059 13.153443c4.191011 20.148513 21.377172 75.709563 50.163992 90.52132 9.444851 4.846799 19.23644 4.733732 30.844637-0.339201l3.851811-1.688465 4.191011 0.301512c0.293974-0.045227 11.434827 0.309049 18.444972-9.309171 7.02522-9.633296 15.090656-35.932645-9.814203-103.727528a16.892187 16.892187 0 0 1 10.108177-21.693759 17.005254 17.005254 0 0 1 21.769137 10.06295c23.359611 63.596334 24.972698 109.373333 4.786497 136.064646-12.769016 16.892187-31.440122 21.919893-43.176461 22.394775zM398.017924 335.129201c-8.133275 4.711119-16.929876 7.115674-25.711401 7.115674-5.148311 0-10.296621-0.829157-15.294176-2.487471-27.15112-9.022735-41.194022-40.379941-31.319518-69.905464 9.874505-29.517986 39.995514-46.21419 67.131558-37.183918 21.957582 7.289043 36.090938 29.781808 34.357247 54.716817a61.7345 61.7345 0 0 1-3.03773 15.181109c-4.658354 13.922298-13.937374 25.485268-26.12598 32.563253z m-15.92735-70.372807a13.990138 13.990138 0 0 0-4.409607-0.708553c-8.095586 0-16.500222 6.68602-19.786699 16.50776-3.897037 11.63081 0.618099 24.038012 9.851892 27.113431 5.600578 1.839221 10.673511-0.324125 13.191132-1.778918 5.050319-2.924663 8.962432-7.914679 10.997636-14.012752l0.007538-0.015076c0.753779-2.246261 1.213584-4.545287 1.371877-6.8217 0.663326-9.527767-3.949802-17.8721-11.223769-20.284192z',
            plane: 'path://M1.112,32.559l2.998,1.205l-2.882,2.268l-2.215-0.012L1.112,32.559z M37.803,23.96 c0.158-0.838,0.5-1.509,0.961-1.904c-0.096-0.037-0.205-0.071-0.344-0.071c-0.777-0.005-2.068-0.009-3.047-0.009 c-0.633,0-1.217,0.066-1.754,0.18l2.199,1.804H37.803z M39.738,23.036c-0.111,0-0.377,0.325-0.537,0.924h1.076 C40.115,23.361,39.854,23.036,39.738,23.036z M39.934,39.867c-0.166,0-0.674,0.705-0.674,1.986s0.506,1.986,0.674,1.986 s0.672-0.705,0.672-1.986S40.102,39.867,39.934,39.867z M38.963,38.889c-0.098-0.038-0.209-0.07-0.348-0.073 c-0.082,0-0.174,0-0.268-0.001l-7.127,4.671c0.879,0.821,2.42,1.417,4.348,1.417c0.979,0,2.27-0.006,3.047-0.01 c0.139,0,0.25-0.034,0.348-0.072c-0.646-0.555-1.07-1.643-1.07-2.967C37.891,40.529,38.316,39.441,38.963,38.889z M32.713,23.96 l-12.37-10.116l-4.693-0.004c0,0,4,8.222,4.827,10.121H32.713z M59.311,32.374c-0.248,2.104-5.305,3.172-8.018,3.172H39.629 l-25.325,16.61L9.607,52.16c0,0,6.687-8.479,7.95-10.207c1.17-1.6,3.019-3.699,3.027-6.407h-2.138 c-5.839,0-13.816-3.789-18.472-5.583c-2.818-1.085-2.396-4.04-0.031-4.04h0.039l-3.299-11.371h3.617c0,0,4.352,5.696,5.846,7.5 c2,2.416,4.503,3.678,8.228,3.87h30.727c2.17,0,4.311,0.417,6.252,1.046c3.49,1.175,5.863,2.7,7.199,4.027 C59.145,31.584,59.352,32.025,59.311,32.374z M22.069,30.408c0-0.815-0.661-1.475-1.469-1.475c-0.812,0-1.471,0.66-1.471,1.475 s0.658,1.475,1.471,1.475C21.408,31.883,22.069,31.224,22.069,30.408z M27.06,30.408c0-0.815-0.656-1.478-1.466-1.478 c-0.812,0-1.471,0.662-1.471,1.478s0.658,1.477,1.471,1.477C26.404,31.885,27.06,31.224,27.06,30.408z M32.055,30.408 c0-0.815-0.66-1.475-1.469-1.475c-0.808,0-1.466,0.66-1.466,1.475s0.658,1.475,1.466,1.475 C31.398,31.883,32.055,31.224,32.055,30.408z M37.049,30.408c0-0.815-0.658-1.478-1.467-1.478c-0.812,0-1.469,0.662-1.469,1.478 s0.656,1.477,1.469,1.477C36.389,31.885,37.049,31.224,37.049,30.408z M42.039,30.408c0-0.815-0.656-1.478-1.465-1.478 c-0.811,0-1.469,0.662-1.469,1.478s0.658,1.477,1.469,1.477C41.383,31.885,42.039,31.224,42.039,30.408z M55.479,30.565 c-0.701-0.436-1.568-0.896-2.627-1.347c-0.613,0.289-1.551,0.476-2.73,0.476c-1.527,0-1.639,2.263,0.164,2.316 C52.389,32.074,54.627,31.373,55.479,30.565z',
            rocket: 'path://M-244.396,44.399c0,0,0.47-2.931-2.427-6.512c2.819-8.221,3.21-15.709,3.21-15.709s5.795,1.383,5.795,7.325C-237.818,39.679-244.396,44.399-244.396,44.399z M-260.371,40.827c0,0-3.881-12.946-3.881-18.319c0-2.416,0.262-4.566,0.669-6.517h17.684c0.411,1.952,0.675,4.104,0.675,6.519c0,5.291-3.87,18.317-3.87,18.317H-260.371z M-254.745,18.951c-1.99,0-3.603,1.676-3.603,3.744c0,2.068,1.612,3.744,3.603,3.744c1.988,0,3.602-1.676,3.602-3.744S-252.757,18.951-254.745,18.951z M-255.521,2.228v-5.098h1.402v4.969c1.603,1.213,5.941,5.069,7.901,12.5h-17.05C-261.373,7.373-257.245,3.558-255.521,2.228zM-265.07,44.399c0,0-6.577-4.721-6.577-14.896c0-5.942,5.794-7.325,5.794-7.325s0.393,7.488,3.211,15.708C-265.539,41.469-265.07,44.399-265.07,44.399z M-252.36,45.15l-1.176-1.22L-254.789,48l-1.487-4.069l-1.019,2.116l-1.488-3.826h8.067L-252.36,45.15z',
            train: 'path://M67.335,33.596L67.335,33.596c-0.002-1.39-1.153-3.183-3.328-4.218h-9.096v-2.07h5.371 c-4.939-2.07-11.199-4.141-14.89-4.141H19.72v12.421v5.176h38.373c4.033,0,8.457-1.035,9.142-5.176h-0.027 c0.076-0.367,0.129-0.751,0.129-1.165L67.335,33.596L67.335,33.596z M27.999,30.413h-3.105v-4.141h3.105V30.413z M35.245,30.413 h-3.104v-4.141h3.104V30.413z M42.491,30.413h-3.104v-4.141h3.104V30.413z M49.736,30.413h-3.104v-4.141h3.104V30.413z  M14.544,40.764c1.143,0,2.07-0.927,2.07-2.07V35.59V25.237c0-1.145-0.928-2.07-2.07-2.07H-9.265c-1.143,0-2.068,0.926-2.068,2.07 v10.351v3.105c0,1.144,0.926,2.07,2.068,2.07H14.544L14.544,40.764z M8.333,26.272h3.105v4.141H8.333V26.272z M1.087,26.272h3.105 v4.141H1.087V26.272z M-6.159,26.272h3.105v4.141h-3.105V26.272z M-9.265,41.798h69.352v1.035H-9.265V41.798z',
            ship: 'path://M16.678,17.086h9.854l-2.703,5.912c5.596,2.428,11.155,5.575,16.711,8.607c3.387,1.847,6.967,3.75,10.541,5.375 v-6.16l-4.197-2.763v-5.318L33.064,12.197h-11.48L20.43,15.24h-4.533l-1.266,3.286l0.781,0.345L16.678,17.086z M49.6,31.84 l0.047,1.273L27.438,20.998l0.799-1.734L49.6,31.84z M33.031,15.1l12.889,8.82l0.027,0.769L32.551,16.1L33.031,15.1z M22.377,14.045 h9.846l-1.539,3.365l-2.287-1.498h1.371l0.721-1.352h-2.023l-0.553,1.037l-0.541-0.357h-0.34l0.359-0.684h-2.025l-0.361,0.684 h-3.473L22.377,14.045z M23.695,20.678l-0.004,0.004h0.004V20.678z M24.828,18.199h-2.031l-0.719,1.358h2.029L24.828,18.199z  M40.385,34.227c-12.85-7.009-25.729-14.667-38.971-12.527c1.26,8.809,9.08,16.201,8.213,24.328 c-0.553,4.062-3.111,0.828-3.303,7.137c15.799,0,32.379,0,48.166,0l0.066-4.195l1.477-7.23 C50.842,39.812,45.393,36.961,40.385,34.227z M13.99,35.954c-1.213,0-2.195-1.353-2.195-3.035c0-1.665,0.98-3.017,2.195-3.017 c1.219,0,2.195,1.352,2.195,3.017C16.186,34.604,15.213,35.954,13.99,35.954z M23.691,20.682h-2.02l-0.588,1.351h2.023 L23.691,20.682z M19.697,18.199l-0.721,1.358h2.025l0.727-1.358H19.697z',
            car: 'path://M49.592,40.883c-0.053,0.354-0.139,0.697-0.268,0.963c-0.232,0.475-0.455,0.519-1.334,0.475 c-1.135-0.053-2.764,0-4.484,0.068c0,0.476,0.018,0.697,0.018,0.697c0.111,1.299,0.697,1.342,0.931,1.342h3.7 c0.326,0,0.628,0,0.861-0.154c0.301-0.196,0.43-0.772,0.543-1.78c0.017-0.146,0.025-0.336,0.033-0.56v-0.01 c0-0.068,0.008-0.154,0.008-0.25V41.58l0,0C49.6,41.348,49.6,41.09,49.592,40.883L49.592,40.883z M6.057,40.883 c0.053,0.354,0.137,0.697,0.268,0.963c0.23,0.475,0.455,0.519,1.334,0.475c1.137-0.053,2.762,0,4.484,0.068 c0,0.476-0.018,0.697-0.018,0.697c-0.111,1.299-0.697,1.342-0.93,1.342h-3.7c-0.328,0-0.602,0-0.861-0.154 c-0.309-0.18-0.43-0.772-0.541-1.78c-0.018-0.146-0.027-0.336-0.035-0.56v-0.01c0-0.068-0.008-0.154-0.008-0.25V41.58l0,0 C6.057,41.348,6.057,41.09,6.057,40.883L6.057,40.883z M49.867,32.766c0-2.642-0.344-5.224-0.482-5.507 c-0.104-0.207-0.766-0.749-2.271-1.773c-1.522-1.042-1.487-0.887-1.766-1.566c0.25-0.078,0.492-0.224,0.639-0.241 c0.326-0.034,0.345,0.274,1.023,0.274c0.68,0,2.152-0.18,2.453-0.48c0.301-0.303,0.396-0.405,0.396-0.672 c0-0.268-0.156-0.818-0.447-1.146c-0.293-0.327-1.541-0.49-2.273-0.585c-0.729-0.095-0.834,0-1.022,0.121 c-0.304,0.189-0.32,1.919-0.32,1.919l-0.713,0.018c-0.465-1.146-1.11-3.452-2.117-5.269c-1.103-1.979-2.256-2.599-2.737-2.754 c-0.474-0.146-0.904-0.249-4.131-0.576c-3.298-0.344-5.922-0.388-8.262-0.388c-2.342,0-4.967,0.052-8.264,0.388 c-3.229,0.336-3.66,0.43-4.133,0.576s-1.633,0.775-2.736,2.754c-1.006,1.816-1.652,4.123-2.117,5.269L9.87,23.109 c0,0-0.008-1.729-0.318-1.919c-0.189-0.121-0.293-0.225-1.023-0.121c-0.732,0.104-1.98,0.258-2.273,0.585 c-0.293,0.327-0.447,0.878-0.447,1.146c0,0.267,0.094,0.379,0.396,0.672c0.301,0.301,1.773,0.48,2.453,0.48 c0.68,0,0.697-0.309,1.023-0.274c0.146,0.018,0.396,0.163,0.637,0.241c-0.283,0.68-0.24,0.524-1.764,1.566 c-1.506,1.033-2.178,1.566-2.271,1.773c-0.139,0.283-0.482,2.865-0.482,5.508s0.189,5.02,0.189,5.86c0,0.354,0,0.976,0.076,1.565 c0.053,0.354,0.129,0.697,0.268,0.966c0.232,0.473,0.447,0.516,1.334,0.473c1.137-0.051,2.779,0,4.477,0.07 c1.135,0.043,2.297,0.086,3.33,0.11c2.582,0.051,1.826-0.379,2.928-0.36c1.102,0.016,5.447,0.196,9.424,0.196 c3.976,0,8.332-0.182,9.423-0.196c1.102-0.019,0.346,0.411,2.926,0.36c1.033-0.018,2.195-0.067,3.332-0.11 c1.695-0.062,3.348-0.121,4.477-0.07c0.886,0.043,1.103,0,1.332-0.473c0.132-0.269,0.218-0.611,0.269-0.966 c0.086-0.592,0.078-1.213,0.078-1.565C49.678,37.793,49.867,35.408,49.867,32.766L49.867,32.766z M13.219,19.735 c0.412-0.964,1.652-2.9,2.256-3.244c0.145-0.087,1.426-0.491,4.637-0.706c2.953-0.198,6.217-0.276,7.73-0.276 c1.513,0,4.777,0.078,7.729,0.276c3.201,0.215,4.502,0.611,4.639,0.706c0.775,0.533,1.842,2.28,2.256,3.244 c0.412,0.965,0.965,2.858,0.861,3.116c-0.104,0.258,0.104,0.388-1.291,0.275c-1.387-0.103-10.088-0.216-14.185-0.216 c-4.088,0-12.789,0.113-14.184,0.216c-1.395,0.104-1.188-0.018-1.291-0.275C12.254,22.593,12.805,20.708,13.219,19.735 L13.219,19.735z M16.385,30.511c-0.619,0.155-0.988,0.491-1.764,0.482c-0.775,0-2.867-0.353-3.314-0.371 c-0.447-0.017-0.842,0.302-1.076,0.362c-0.23,0.06-0.688-0.104-1.377-0.318c-0.688-0.216-1.092-0.155-1.316-1.094 c-0.232-0.93,0-2.264,0-2.264c1.488-0.068,2.928,0.069,5.621,0.826c2.693,0.758,4.191,2.213,4.191,2.213 S17.004,30.357,16.385,30.511L16.385,30.511z M36.629,37.293c-1.23,0.164-6.386,0.207-8.794,0.207c-2.412,0-7.566-0.051-8.799-0.207 c-1.256-0.164-2.891-1.67-1.764-2.865c1.523-1.627,1.24-1.576,4.701-2.023C24.967,32.018,27.239,32,27.834,32 c0.584,0,2.865,0.025,5.859,0.404c3.461,0.447,3.178,0.396,4.699,2.022C39.521,35.623,37.887,37.129,36.629,37.293L36.629,37.293z  M48.129,29.582c-0.232,0.93-0.629,0.878-1.318,1.093c-0.688,0.216-1.145,0.371-1.377,0.319c-0.231-0.053-0.627-0.371-1.074-0.361 c-0.448,0.018-2.539,0.37-3.313,0.37c-0.772,0-1.146-0.328-1.764-0.481c-0.621-0.154-0.966-0.154-0.966-0.154 s1.49-1.464,4.191-2.213c2.693-0.758,4.131-0.895,5.621-0.826C48.129,27.309,48.361,28.643,48.129,29.582L48.129,29.582z',
            reindeer: 'path://M-22.788,24.521c2.08-0.986,3.611-3.905,4.984-5.892 c-2.686,2.782-5.047,5.884-9.102,7.312c-0.992,0.005-0.25-2.016,0.34-2.362l1.852-0.41c0.564-0.218,0.785-0.842,0.902-1.347 c2.133-0.727,4.91-4.129,6.031-6.194c1.748-0.7,4.443-0.679,5.734-2.293c1.176-1.468,0.393-3.992,1.215-6.557 c0.24-0.754,0.574-1.581,1.008-2.293c-0.611,0.011-1.348-0.061-1.959-0.608c-1.391-1.245-0.785-2.086-1.297-3.313 c1.684,0.744,2.5,2.584,4.426,2.586C-8.46,3.012-8.255,2.901-8.04,2.824c6.031-1.952,15.182-0.165,19.498-3.937 c1.15-3.933-1.24-9.846-1.229-9.938c0.008-0.062-1.314-0.004-1.803-0.258c-1.119-0.771-6.531-3.75-0.17-3.33 c0.314-0.045,0.943,0.259,1.439,0.435c-0.289-1.694-0.92-0.144-3.311-1.946c0,0-1.1-0.855-1.764-1.98 c-0.836-1.09-2.01-2.825-2.992-4.031c-1.523-2.476,1.367,0.709,1.816,1.108c1.768,1.704,1.844,3.281,3.232,3.983 c0.195,0.203,1.453,0.164,0.926-0.468c-0.525-0.632-1.367-1.278-1.775-2.341c-0.293-0.703-1.311-2.326-1.566-2.711 c-0.256-0.384-0.959-1.718-1.67-2.351c-1.047-1.187-0.268-0.902,0.521-0.07c0.789,0.834,1.537,1.821,1.672,2.023 c0.135,0.203,1.584,2.521,1.725,2.387c0.102-0.259-0.035-0.428-0.158-0.852c-0.125-0.423-0.912-2.032-0.961-2.083 c-0.357-0.852-0.566-1.908-0.598-3.333c0.4-2.375,0.648-2.486,0.549-0.705c0.014,1.143,0.031,2.215,0.602,3.247 c0.807,1.496,1.764,4.064,1.836,4.474c0.561,3.176,2.904,1.749,2.281-0.126c-0.068-0.446-0.109-2.014-0.287-2.862 c-0.18-0.849-0.219-1.688-0.113-3.056c0.066-1.389,0.232-2.055,0.277-2.299c0.285-1.023,0.4-1.088,0.408,0.135 c-0.059,0.399-0.131,1.687-0.125,2.655c0.064,0.642-0.043,1.768,0.172,2.486c0.654,1.928-0.027,3.496,1,3.514 c1.805-0.424,2.428-1.218,2.428-2.346c-0.086-0.704-0.121-0.843-0.031-1.193c0.221-0.568,0.359-0.67,0.312-0.076 c-0.055,0.287,0.031,0.533,0.082,0.794c0.264,1.197,0.912,0.114,1.283-0.782c0.15-0.238,0.539-2.154,0.545-2.522 c-0.023-0.617,0.285-0.645,0.309,0.01c0.064,0.422-0.248,2.646-0.205,2.334c-0.338,1.24-1.105,3.402-3.379,4.712 c-0.389,0.12-1.186,1.286-3.328,2.178c0,0,1.729,0.321,3.156,0.246c1.102-0.19,3.707-0.027,4.654,0.269 c1.752,0.494,1.531-0.053,4.084,0.164c2.26-0.4,2.154,2.391-1.496,3.68c-2.549,1.405-3.107,1.475-2.293,2.984 c3.484,7.906,2.865,13.183,2.193,16.466c2.41,0.271,5.732-0.62,7.301,0.725c0.506,0.333,0.648,1.866-0.457,2.86 c-4.105,2.745-9.283,7.022-13.904,7.662c-0.977-0.194,0.156-2.025,0.803-2.247l1.898-0.03c0.596-0.101,0.936-0.669,1.152-1.139 c3.16-0.404,5.045-3.775,8.246-4.818c-4.035-0.718-9.588,3.981-12.162,1.051c-5.043,1.423-11.449,1.84-15.895,1.111 c-3.105,2.687-7.934,4.021-12.115,5.866c-3.271,3.511-5.188,8.086-9.967,10.414c-0.986,0.119-0.48-1.974,0.066-2.385l1.795-0.618 C-22.995,25.682-22.849,25.035-22.788,24.521z',
            run: 'path://M13.676,32.955c0.919-0.031,1.843-0.008,2.767-0.008v0.007c0.827,0,1.659,0.041,2.486-0.019 c0.417-0.028,1.118,0.325,1.14-0.545c0.014-0.637-0.156-1.279-0.873-1.367c-1.919-0.241-3.858-0.233-5.774,0.019 c-0.465,0.062-0.998,0.442-0.832,1.069C12.715,32.602,13.045,32.977,13.676,32.955z M14.108,29.013 c1.47-0.007,2.96-0.122,4.414,0.035c1.792,0.192,3.1-0.412,4.273-2.105c-3.044,0-5.882,0.014-8.719-0.01 c-0.768-0.005-1.495,0.118-1.461,1C12.642,28.731,13.329,29.014,14.108,29.013z M23.678,36.593c-0.666-0.69-1.258-1.497-2.483-1.448 c-2.341,0.095-4.689,0.051-7.035,0.012c-0.834-0.014-1.599,0.177-1.569,1.066c0.031,0.854,0.812,1.062,1.636,1.043 c1.425-0.033,2.852-0.01,4.278-0.01v-0.01c1.562,0,3.126,0.008,4.691-0.005C23.614,37.239,24.233,37.174,23.678,36.593z  M32.234,42.292h-0.002c-1.075,0.793-2.589,0.345-3.821,1.048c-0.359,0.193-0.663,0.465-0.899,0.799 c-1.068,1.623-2.052,3.301-3.117,4.928c-0.625,0.961-0.386,1.805,0.409,2.395c0.844,0.628,1.874,0.617,2.548-0.299 c1.912-2.573,3.761-5.197,5.621-7.814C33.484,42.619,33.032,42.387,32.234,42.292z M43.527,28.401 c-0.688-1.575-2.012-0.831-3.121-0.895c-1.047-0.058-2.119,1.128-3.002,0.345c-0.768-0.677-1.213-1.804-1.562-2.813 c-0.45-1.305-1.495-2.225-2.329-3.583c2.953,1.139,4.729,0.077,5.592-1.322c0.99-1.61,0.718-3.725-0.627-4.967 c-1.362-1.255-3.414-1.445-4.927-0.452c-1.933,1.268-2.206,2.893-0.899,6.11c-2.098-0.659-3.835-1.654-5.682-2.383 c-0.735-0.291-1.437-1.017-2.293-0.666c-2.263,0.927-4.522,1.885-6.723,2.95c-1.357,0.658-1.649,1.593-1.076,2.638 c0.462,0.851,1.643,1.126,2.806,0.617c0.993-0.433,1.994-0.857,2.951-1.374c1.599-0.86,3.044-0.873,4.604,0.214 c1.017,0.707,0.873,1.137,0.123,1.849c-1.701,1.615-3.516,3.12-4.933,5.006c-1.042,1.388-0.993,2.817,0.255,4.011 c1.538,1.471,3.148,2.869,4.708,4.315c0.485,0.444,0.907,0.896-0.227,1.104c-1.523,0.285-3.021,0.694-4.538,1.006 c-1.109,0.225-2.02,1.259-1.83,2.16c0.223,1.07,1.548,1.756,2.687,1.487c3.003-0.712,6.008-1.413,9.032-2.044 c1.549-0.324,2.273-1.869,1.344-3.115c-0.868-1.156-1.801-2.267-2.639-3.445c-1.964-2.762-1.95-2.771,0.528-5.189 c1.394-1.357,1.379-1.351,2.437,0.417c0.461,0.769,0.854,1.703,1.99,1.613c2.238-0.181,4.407-0.755,6.564-1.331 C43.557,30.447,43.88,29.206,43.527,28.401z',
            // walk: 'path://M29.902,23.275c1.86,0,3.368-1.506,3.368-3.365c0-1.859-1.508-3.365-3.368-3.365 c-1.857,0-3.365,1.506-3.365,3.365C26.537,21.769,28.045,23.275,29.902,23.275z M36.867,30.74c-1.666-0.467-3.799-1.6-4.732-4.199 c-0.932-2.6-3.131-2.998-4.797-2.998s-7.098,3.894-7.098,3.894c-1.133,1.001-2.1,6.502-0.967,6.769 c1.133,0.269,1.266-1.533,1.934-3.599c0.666-2.065,3.797-3.466,3.797-3.466s0.201,2.467-0.398,3.866 c-0.599,1.399-1.133,2.866-1.467,6.198s-1.6,3.665-3.799,6.266c-2.199,2.598-0.6,3.797,0.398,3.664 c1.002-0.133,5.865-5.598,6.398-6.998c0.533-1.397,0.668-3.732,0.668-3.732s0,0,2.199,1.867c2.199,1.865,2.332,4.6,2.998,7.73 s2.332,0.934,2.332-0.467c0-1.401,0.269-5.465-1-7.064c-1.265-1.6-3.73-3.465-3.73-5.265s1.199-3.732,1.199-3.732 c0.332,1.667,3.335,3.065,5.599,3.399C38.668,33.206,38.533,31.207,36.867,30.74z',
            rhino: 'path://M886.365591 448.137634c-2.202151 0.73405-4.037276 1.4681-6.239426 1.835126-4.404301 1.101075-8.074552 2.936201-12.111828 4.037276-2.202151 0.73405-4.404301 0.73405-6.606452 1.4681-1.835125 0.73405-4.771326 1.101075-6.606451 1.468101-3.303226 0.73405-5.872401 1.835125-9.175628 2.569175-4.771326 1.101075-7.707527 3.303226-12.478853 4.037276-1.835125 0.367025-5.505376 1.4681-7.340501 1.835126-1.4681 0.367025-3.670251 0.367025-5.505377 0.73405-2.202151 0.367025-3.303226 0.367025-5.872401 0.73405-2.202151 0.367025-4.771326 1.101075-6.606452 1.101075-5.138351 0.367025-7.707527 1.101075-13.579928 1.835126-1.101075 0-4.771326 1.101075-6.239427 1.4681-1.4681 0.367025-3.670251 0.367025-5.138351 0.73405-2.202151 0.367025-3.303226 0.367025-6.239426-0.367025 1.101075-8.074552 2.936201-13.212903 7.707526-17.984229 1.835125-1.835125 5.138351-4.404301 8.074552-6.606452 3.670251-3.303226 6.239427-5.872401 11.010753-7.340502 3.303226-1.101075 8.808602-0.73405 8.808602-5.505376-0.367025-5.138351-7.707527-4.404301-13.946953-4.037276-9.542652 0.367025-15.415054 3.303226-23.489606 5.872401-5.138351 1.4681-8.441577 2.569176-13.579928 5.138352-1.101075 0.73405-2.569176 1.4681-4.404301 1.835125-1.101075 0.367025-3.670251 1.4681-4.771326 1.468101-1.4681-0.367025-5.138351-4.404301-6.606452-6.239427-2.202151-2.569176-4.037276-4.771326-5.505376-7.707527-2.569176-4.771326-2.936201-9.542652-4.771327-14.313978-0.73405-1.4681-0.73405-2.569176-1.4681-4.037276-0.367025-1.4681-1.101075-2.936201-1.4681-4.037276-0.367025-1.4681-1.101075-2.569176-1.468101-4.037276-1.101075-2.936201-1.101075-6.239427-2.20215-9.175628-0.73405-1.835125-2.569176-4.404301-3.670251-6.606451-1.101075-2.202151-4.037276-4.771326-4.404301-6.239427-1.835125-7.707527 6.239427-11.010753 8.441577-16.149104 1.4681-4.037276 1.835125-12.111828-0.367025-16.149104-2.569176-3.670251-8.441577-7.707527-14.313979-8.441577-3.303226-0.367025-7.707527-0.73405-10.276702 2.569176 0.73405 5.138351-1.101075 7.707527-2.569176 11.377778-1.835125-1.835125-4.037276-4.771326-8.074552-5.872402-3.670251-1.101075-9.909677-1.4681-11.744803-0.367025-1.835125 0.73405-1.4681 2.936201-3.303225 3.670251-4.037276-3.670251-6.239427-8.074552-9.909678-11.377778-4.037276-3.670251-8.808602-4.771326-15.048029-5.872401-6.606452-1.101075-13.579928-4.037276-20.92043-4.404301-3.303226 0-6.973477 0.367025-10.276702 0.73405-1.4681 0.367025-3.303226 0.73405-4.771326 1.101075-2.202151 0.367025-4.404301 0.73405-6.239427 1.101076-8.074552 2.202151-12.111828 8.441577-19.085304 12.111827-1.101075 0.367025-2.202151 0.73405-3.670251 1.468101-2.569176 1.101075-5.872401 2.569176-9.542653 2.936201-5.505376 0.73405-10.643728 0-15.782079 0.367025s-9.542652 1.4681-13.946953 2.20215c-9.175627 1.101075-15.782079 2.936201-23.489606 5.505377-3.670251 1.101075-6.973477 2.569176-10.643727 3.67025-3.303226 1.101075-5.872401 3.670251-9.542653 4.771327-9.542652 3.670251-23.489606 4.404301-35.968458 5.138351l-8.808603 1.101075c-8.441577 0.73405-17.984229-0.73405-25.691756-1.4681-4.037276-0.367025-8.441577 0.367025-11.744803-0.367025-2.202151-0.367025-4.037276-0.73405-6.239426-1.101076-1.835125-0.367025-3.670251-0.367025-5.872402-0.367025-2.569176-0.367025-4.037276-1.101075-6.606451-1.101075-1.101075 0-3.303226-0.367025-4.404301-0.367025-4.771326-0.367025-11.010753-2.936201-15.415054-3.670251-2.202151-0.367025-4.037276 0.367025-6.606452 0-4.771326-0.367025-9.175627-1.835125-13.212903-2.569176-4.404301-0.367025-9.175627-0.367025-13.212903-0.367025-4.404301 0-8.074552 0.73405-12.478853 1.468101-10.276703 1.101075-20.18638 1.835125-30.830108 3.670251-2.936201 0.367025-5.505376 1.4681-9.909677 1.4681-8.074552 0.73405-18.71828 1.835125-27.893907 2.569176-9.175627 0.73405-26.058781 2.569176-27.526882 2.569175-1.4681 0-16.516129 4.771326-16.516129 4.771326l-4.404301 2.202151s-1.835125 0.367025-8.808602 5.872401c-3.670251 2.202151-5.872401 4.404301-5.872401 4.404301s-2.569176 2.569176-11.377778 9.909678c-2.936201 1.835125-7.340502 9.175627-7.707527 9.175627 0 0-9.909677 12.845878-16.149104 21.287455-2.569176 3.303226-4.037276 5.872401-6.239426 10.276703-0.73405 1.835125-2.202151 3.303226-2.936201 5.138351-0.73405 1.4681-1.835125 4.037276-2.936201 5.872401-1.4681 3.670251-4.037276 9.175627-4.404301 13.946954-0.367025 2.202151-0.367025 4.771326-0.367025 6.973477 0 2.202151-0.367025 4.404301-0.367025 6.606451-0.73405 20.553405-0.73405 50.282437 0.73405 72.303943-2.569176 2.569176-3.303226 8.808602-3.670251 15.048029-0.367025 4.771326 0.73405 9.909677 0.73405 13.946953 0 1.4681-0.73405 3.670251 0 6.606452 0 1.4681 0.367025 2.569176 0.367025 3.67025 0.367025 1.4681 1.4681 1.835125 2.936201 0.734051 0 1.101075 1.101075 1.101075 1.835126 0.73405 0.367025-0.367025 1.4681 0.73405 1.835125 1.835125 1.101075-0.367025-0.367025-1.101075 1.101075-1.4681 1.4681-0.367025 2.202151 0.367025 2.936201 0.367025 1.101075-1.835125 1.835125-2.569176 0.73405-5.872401 0-1.835125 1.101075 0.73405 1.468101-0.734051-2.569176-5.138351 0-14.681004-1.835126-22.38853-0.73405-2.936201-2.569176-5.505376-2.936201-8.441577-0.367025-3.303226 0.367025-7.340502 0.734051-11.010753 0.367025-5.505376-0.73405-11.377778 1.4681-16.149104 2.202151 0.367025 2.569176 3.670251 2.936201 5.505377 1.835125 6.973477 5.138351 13.212903 5.872401 21.287455 1.101075 1.101075 1.101075 2.936201 1.4681 4.404301 0.73405 1.101075 1.4681 1.4681 2.202151 2.569175 2.202151 2.936201 4.404301 7.340502 6.606452 11.377778 3.303226 5.872401 7.340502 16.516129 7.340501 16.516129s1.101075 22.755556-0.73405 34.500359c-0.73405 3.303226-1.835125 6.606452-2.569175 10.276702-1.101075 5.505376-3.670251 11.010753-2.569176 17.98423 8.441577 10.276703 19.085305 18.351254 27.893907 28.260931-2.202151 4.037276-6.239427 8.441577-4.771326 15.415054 1.4681 2.202151 4.404301 1.835125 6.606451 1.835126 19.085305 0 42.941935-1.4681 62.76129-2.936201 4.404301-0.367025 9.909677 1.4681 12.845879-1.4681 2.569176-7.340502-4.771326-7.340502-8.808603-8.808603-4.037276-1.835125-6.973477-6.239427-9.175627-9.542652-0.73405-1.101075-2.202151-2.202151-2.569175-3.303226-1.835125-3.303226-3.303226-7.707527-4.771327-11.744803-4.037276-11.010753-1.835125-24.957706-5.872401-36.702508 0.367025-11.744803-1.835125-23.489606 2.202151-34.867384 2.202151-5.872401 5.505376-9.909677 9.175627-14.681004 1.101075-1.4681 1.835125-2.936201 2.9362-4.404301 1.101075-1.4681 2.569176-2.202151 3.670251-3.670251 4.771326-6.973477 4.037276-16.149104 11.010753-22.021505 5.505376 7.340502 15.048029 12.111828 22.388531 18.71828 4.037276 3.670251 8.441577 7.340502 13.579928 11.377777 2.936201 2.202151 5.138351 4.037276 8.441577 5.872402 2.202151 1.101075 4.404301 1.835125 6.973477 2.936201 2.569176 1.101075 4.771326 2.202151 6.973476 2.9362 3.670251 1.101075 7.340502 2.202151 11.377778 3.670251 9.542652 3.303226 22.38853 6.973477 34.133333 8.074552 7.707527 0.73405 16.149104 0.367025 24.223656 0.367025h22.388531c10.643728-0.367025 21.65448 0 32.665233-0.73405 5.872401-0.367025 12.111828-1.835125 17.984229-2.936201 6.239427-1.101075 12.111828-1.835125 17.617204-3.670251 0.367025 4.037276 1.835125 8.074552 1.468101 12.111828 0 2.202151-1.101075 4.771326-1.468101 7.707527-0.367025 1.4681-0.73405 2.569176-1.101075 4.037276-0.73405 2.569176-1.4681 4.404301-1.835125 6.973477-0.73405 6.973477 0 15.782079-1.101076 22.38853-0.367025 1.4681-1.101075 2.936201-1.4681 4.404302-0.73405 4.404301 0.367025 8.808602-0.367025 12.845878-0.367025 2.202151-2.202151 3.670251-3.670251 5.872401-1.4681 2.569176-2.936201 5.505376-4.771326 8.441577-1.835125 2.569176-4.771326 4.771326-5.872401 6.973477-0.73405 1.4681-1.4681 4.404301-0.367026 5.505376 1.4681 2.202151 7.707527 0.73405 11.010753 1.101075 1.835125 0.367025 4.037276 1.101075 5.872402 1.468101 6.606452 0.73405 13.946953 0 21.287455-0.367025 20.18638-0.367025 43.308961-0.367025 63.862365-0.73405 0.73405-10.643728-10.643728-9.542652-17.250179-13.946954-1.835125-1.4681-2.936201-4.404301-4.771326-6.606451-2.936201-3.670251-7.340502-7.707527-5.505376-14.681004 0.367025-1.4681 1.101075-2.936201 1.4681-4.404301 0-1.4681-0.367025-3.303226 0-5.872402 0.367025-1.835125 1.835125-4.404301 2.936201-6.973476 2.936201-7.707527 4.771326-16.149104 8.808602-22.755556 1.4681-2.569176 4.037276-5.138351 5.505376-7.707527l16.149104-24.223656 12.845878-16.149104s15.415054-6.973477 20.92043-10.643727c3.303226-1.101075 5.505376-2.202151 7.340502-4.404301 2.936201-2.936201 3.303226-11.377778 8.074552-12.478853 3.670251-0.73405 5.138351 0.73405 7.707527 1.4681 4.037276 1.4681 5.138351 12.845878 7.707527 11.010753 2.936201-1.835125 7.707527-15.415054 9.175627-18.351255l1.101075-3.303226c1.101075-2.569176 2.936201-4.404301 4.771327-6.606451 2.202151 0.73405 2.569176 3.303226 4.037276 5.505376 5.138351 7.340502 15.782079 11.377778 23.12258 17.98423 5.872401 5.138351 15.782079 7.707527 21.654481 11.744802 3.670251 2.569176 12.845878 9.909677 19.085304 11.010753 1.835125 0.367025 1.835125 0.73405 3.303226 1.101075 2.569176 0.367025 1.4681 0.367025 5.872401 1.101076 6.606452 0.73405 4.037276 1.101075 14.313979 1.835125 12.111828 2.936201 21.65448 0 24.223656-7.707527 0.367025 0 0.367025-0.73405 0.367025-1.101075 3.303226-2.936201 2.202151-2.569176 2.936201-4.037276 0.73405-1.4681 2.569176-3.670251 3.303225-6.239427 1.101075-3.670251 2.936201-7.707527 3.670251-12.111827 1.101075-9.175627-1.4681-16.149104-3.670251-21.654481 1.101075-4.771326 5.138351-6.973477 8.074552-9.909677 6.973477-3.303226 14.681004-6.239427 22.021506-9.909678 2.202151-1.101075 4.037276-2.936201 6.606451-4.037276 2.569176-1.101075 4.771326-2.936201 7.340502-4.771326 1.4681-1.101075 3.670251-2.202151 5.138351-3.670251 1.4681-1.4681 3.670251-2.569176 5.138352-3.670251 3.303226-2.569176 8.441577-5.505376 11.744803-7.707526 6.973477-5.138351 13.579928-8.441577 20.18638-13.579929 2.936201-2.202151 5.505376-5.138351 8.441577-7.707527 2.569176-2.202151 6.606452-4.404301 6.606451-8.808602-2.936201-3.303226-7.340502-0.367025-11.377778 0.73405z m-159.655914 17.617205c-3.670251 0-6.973477-2.936201-6.973476-6.973477s2.936201-6.973477 6.973476-6.973477 6.973477 2.936201 6.973477 6.973477-3.303226 6.973477-6.973477 6.973477z',
            snail: 'path://M817.364875 463.552688c-4.037276-20.18638-22.755556-31.931183-28.627957-35.601434-4.404301-2.936201 14.681004-108.272401 14.681003-108.272401 4.771326-0.367025 8.808602-4.771326 8.808602-9.542652 0-5.505376-4.404301-9.909677-9.909677-9.909678-5.505376 0-9.909677 4.404301-9.909678 9.909678 0 3.670251 1.835125 6.606452 4.771327 8.441577 0 0-20.92043 104.969176-24.223656 106.070251-3.303226 1.101075-17.250179 1.835125-18.351255-0.367025-0.73405-2.202151-1.835125-105.336201-1.835125-105.336201 4.404301-1.101075 7.340502-4.771326 7.340502-9.542652 0-5.505376-4.404301-9.909677-9.909678-9.909678-5.505376 0-9.909677 4.404301-9.909677 9.909678 0 4.037276 2.569176 7.707527 5.872401 9.175627 0 0-1.101075 105.703226-6.239426 107.171326-5.505376 1.101075-16.149104 6.606452-23.489606 11.744803-25.324731 17.617204-35.234409 82.21362-41.84086 113.410752-16.149104-33.032258-31.564158-104.602151-79.644445-150.480286-68.633692-65.330466-236.731183-68.633692-285.545519 62.76129-37.436559 101.298925-5.505376 162.22509 4.404301 180.209319-33.032258 0.367025-55.787814 0.73405-55.787814 0.73405-31.197133 6.606452-64.596416 46.612186 13.579928 48.814337 78.176344 2.202151 376.567742 30.463082 437.860932-10.643727 48.814337-32.665233 69.734767-93.224373 65.330466-126.623656-4.037276-33.766308 51.383513-45.511111 42.574911-92.123298z m-33.032259-6.973477c3.670251 0 6.973477 2.936201 6.973477 6.973477s-2.936201 6.973477-6.973477 6.973477-6.973477-2.936201-6.973476-6.973477 2.936201-6.973477 6.973476-6.973477z'
        };
        option = {
            title: {
                text: '今\n日\n羊\n王\n榜',
                subtext: '﹃\n十\n大\n撸\n丸\n榜\n新\n鲜\n出\n炉\n﹄',
                textStyle: {
                    color: 'cyan',
                    fontSize: 20,
                },
                subtextStyle: {
                    color: '#98F5FF',
                    fontSize: 14,
                }
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'none'
                },
                formatter: function (params) {
                    return params[0].name + ' : 获丸' + params[0].value + '个';
                }
            },
            grid: {
                // top: '50',
                // left: '0%',
                bottom: '7%',
                // width: '100%',
                // height: '85%',
                // containLabel: true
            },
            xAxis: {
                data: dataX,
                axisTick: {
                    show: false
                },
                axisLine: {
                    show: false
                },
                axisLabel: {
                    textStyle: {
                        color: 'cyan'
                    }
                }
            },
            yAxis: {
                splitLine: {
                    show: false
                },
                axisTick: {
                    show: false
                },
                axisLine: {
                    show: false
                },
                axisLabel: {
                    show: false
                }
            },
            color: ['#00F5FF'],
            series: [{
                name: 'hill',
                type: 'pictorialBar',
                barCategoryGap: '-130%',
                symbol: 'path://M0,10 L10,10 C5.5,10 5.5,5 5,0 C4.5,5 4.5,10 0,10 z',
                itemStyle: {
                    normal: {
                        opacity: 0.5
                    },
                    emphasis: {
                        opacity: 1
                    }
                },
                data: dataY,
                z: 10
            }, {
                name: 'glyph',
                type: 'pictorialBar',
                barGap: '-100%',
                symbolPosition: 'end',
                symbolSize: 50,
                symbolOffset: [0, '-120%'],
                data: [{
                    value: dataY[0].value,
                    symbol: pathSymbols.sheep,
                    symbolSize: [50, 50],
                }, {
                    value: dataY[1].value,
                    symbol: pathSymbols.rocket,
                    symbolSize: [40, 50],
                }, {
                    value: dataY[2].value,
                    symbol: pathSymbols.plane,
                    symbolSize: [60, 30],
                }, {
                    value: dataY[3].value,
                    symbol: pathSymbols.train,
                    symbolSize: [50, 30],
                }, {
                    value: dataY[4].value,
                    symbol: pathSymbols.car,
                    symbolSize: [50, 35],
                }, {
                    value: dataY[5].value,
                    symbol: pathSymbols.ship,
                    symbolSize: [40, 30],
                }, {
                    value: dataY[6].value,
                    symbol: pathSymbols.reindeer,
                    symbolSize: [40, 50],
                }, {
                    value: dataY[7].value,
                    symbol: pathSymbols.run,
                    symbolSize: [40, 50],
                }, {
                    value: dataY[8].value,
                    symbol: pathSymbols.rhino,
                    symbolSize: [50, 40],
                }, {
                    value: dataY[9].value,
                    symbol: pathSymbols.snail,
                    symbolSize: [50, 40],
                }]
            }]
        };
        if (option && typeof option === "object") {
            myChart0.setOption(option, true);
            myChart0.on('click', function (e) {
                window.open('https://bojianger.com/anchor-search-result.html?keyword=' + e.data.url);
            });
        }
    }
    //============================================================ 
    //================== 抽奖/火力时段绘图渲染 ====================
    //============================================================
    var myChart1 = echarts.init(document.getElementById('myChart1'));

    function renderDiffHourTable(todayFireDataY) { //火力时段分布图(今日与昨日对比)
        // let curHour = parseInt(dateFormat("HH",curDay));
        var dataX = [];
        for (let m = 0; m < 24; m++) {
            dataX.push(m);
        }
        var option1 = {
            // title : {
            //     text: '抽奖时段分布图',
            //  textStyle: {
            //      color: '#45b4e7'
            //  }        	    
            // },				
            toolbox: {
                show: true,
                feature: {
                    // dataView : {show: true, readOnly: false},
                    magicType: {
                        show: true,
                        type: ['line', 'bar']
                    }
                    // restore : {show: true},
                    // saveAsImage : {show: true}
                }
            },
            tooltip: {
                trigger: 'axis'
            },
            grid: {
                top: 40,
                left: '0%',
                bottom: '0%',
                width: '100%',
                // height: '70%',
                containLabel: true
            },
            xAxis: {
                data: dataX,
                axisLabel: {
                    show: true,
                    textStyle: {
                        fontSize: '12px',
                        color: '#fff',
                    }
                },
                axisLine: {
                    lineStyle: {
                        color: '#fff',
                        width: 1,
                    }
                }
            },
            yAxis: {
                axisLabel: {
                    show: true,
                    textStyle: {
                        fontSize: '12px',
                        color: '#fff',
                    }
                },
                axisLine: {
                    lineStyle: {
                        color: '#fff',
                        width: 1,
                    }
                },
                splitLine: {
                    show: false,
                }
            },
            series: [{
                name: '今日抽奖数',
                type: 'bar',
                barWidth: 10,
                data: todayFireDataY,
                markPoint: {
                    data: [{
                        type: 'max',
                        name: '最大值'
                    }, {
                        type: 'min',
                        name: '最小值'
                    }]
                },
                markLine: {
                    data: [{
                        type: 'average',
                        name: '平均值'
                    },]
                },
                itemStyle: {
                    normal: {
                        barBorderRadius: [5, 5, 5, 5],
                        color: new echarts.graphic.LinearGradient(
                            0, 0, 0, 1, [{
                                offset: 0,
                                color: '#66CD00'
                            }, {
                                offset: 0.5,
                                color: '#ADFF2F'
                            }, {
                                offset: 1,
                                color: '#CAFF70'
                            }]
                        ),
                    },
                },
                emphasis: {

                }
            }, {
                name: '昨日抽奖数',
                type: 'bar',
                barWidth: 10,
                data: yesterdayHourDataY,
                markPoint: {
                    data: [{
                        type: 'max',
                        name: '最大值'
                    }, {
                        type: 'min',
                        name: '最小值'
                    }]
                },
                markLine: {
                    data: [{
                        type: 'average',
                        name: '平均值'
                    }]
                },
                itemStyle: {
                    normal: {
                        barBorderRadius: [5, 5, 5, 5],
                        color: new echarts.graphic.LinearGradient(
                            0, 0, 0, 1, [{
                                offset: 0,
                                color: '#3876cd'
                            }, {
                                offset: 0.5,
                                color: '#45b4e7'
                            }, {
                                offset: 1,
                                color: '#54ffff'
                            }]
                        ),
                    },
                },
            },]
        }
        if (option1 && typeof option1 === "object") {
            myChart1.setOption(option1, true);
        }
    }
    //======================================================================================================================== 
    //++++++++++++++++++++++ 入口1 (包括今日+昨日用户量，私有弹幕人数，3次请求)，需要等待COS的JS脚本加载 +++++++++++++++++++++++++++
    //======================================================================================================================== 
    function getUserNumber(isToday) {
        var userList = [];
        loopUserList(isToday, "");

        function loopUserList(isToday, NextMarker) {
            cos.getBucket({
                Bucket: 'jumpstat-1253626683',
                Region: 'ap-beijing',
                Marker: NextMarker,
                Prefix: 'JumpCount/' + dateFormat("YYYY-mm-dd", isToday ? curDay : lastDay) + '/',
            }, function (err, data) {
                if (err) {
                    console.error(err);
                    alert("网络请求失败，请刷新页面重试");
                } else {
                    dealUserList(data);
                }
            });
        }

        function dealUserList(data) {
            let userPartList = data.Contents;
            for (let m = 0; m < userPartList.length; m++) { // console.info(nodeList[m].Key);
                let tempList = userPartList[m].Key.split("@");
                // if(tempList.length>=7){//&& nodeList[m].indexof("#")>-1
                var tempJson = {
                    userAvatar: 0,
                    uid: 0,
                    uname: '**',
                    jumpCount: 0,
                    fishBallIncome: 0,
                    cashIncome: 0,
                    danmuCount: 0,
                    version: 0,
                    accountBall: 0,
                    accountWing: 0,
                    userLevel: 0,
                    userExp: 0,
                    userFollow: 0,
                    activeTime: 0,
                    danmuError: 0,
                    fishFood: 0
                };
                for (let n = 0; n < tempList.length; n++) {
                    if (tempList[n].indexOf("uid") > -1) {
                        tempJson.uid = tempList[n].split("#")[1];
                    } else if (tempList[n].indexOf("uname") > -1) {
                        tempJson.uname = tempList[n].split("#")[1];
                    } else if (tempList[n].indexOf("jumpCount") > -1) {
                        tempJson.jumpCount = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("fishBallIncome") > -1) {
                        tempJson.fishBallIncome = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("cashIncome") > -1) {
                        tempJson.cashIncome = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("danmuCount") > -1) {
                        tempJson.danmuCount = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("version") > -1) {
                        tempJson.version = (tempList[n].split("#")[1]).replace(/_/g, ":");
                    } else if (tempList[n].indexOf("accountBall") > -1) {
                        tempJson.accountBall = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("userLevel") > -1) {
                        tempJson.userLevel = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("userExp") > -1) {
                        tempJson.userExp = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("userFollow") > -1) {
                        tempJson.userFollow = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("userAvatar") > -1) {
                        tempJson.userAvatar = "https://apic.douyucdn.cn/upload/" + (tempList[n].split("#")[1]).replace(/~/g, '/');
                    } else if (tempList[n].indexOf("accountWing") > -1) {
                        tempJson.accountWing = parseFloat(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("activeTime") > -1) {
                        tempJson.activeTime = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("danmuError") > -1) {
                        tempJson.danmuError = parseInt(tempList[n].split("#")[1]);
                    } else if (tempList[n].indexOf("fishFood") > -1) {
                        tempJson.fishFood = parseInt(tempList[n].split("#")[1]);
                    }
                }
                userList.push(tempJson);
            }
            if (data.IsTruncated == "true") {
                loopUserList(isToday, data.NextMarker);
            } else {
                // console.info("用户未去重数目：" + userList.length);
                userList = [].concat(distinctUserList(userList));
                console.debug(userList);
                renderUserNumber(isToday, userList);
            }
        }
    }
    // 用户排序去重
    function distinctUserList(arr) {
        arr.sort(function (a, b) {
            return a.jumpCount - b.jumpCount;
            // return a.fishBallIncome - b.fishBallIncome;
        });
        result = [];
        for (let i = 0; i < arr.length; i++) {
            for (let j = i + 1; j < arr.length; j++) {
                if (arr[i].uid === arr[j].uid) {
                    j = ++i;
                }
            }
            result.push(arr[i]);
        }
        console.debug(result);
        return result.reverse();
    }
    //============================================================ 
    //============= 四大榜单鱼丸榜、跳转榜、火力榜、鱼翅榜 ============
    //============================================================    
    var todayUserList = [];
    var todayFishBall = 0;
    var todayWing = 0;
    var todayFood = 0;
    var todayCash = 0;

    function renderUserNumber(isToday, userList) { //四大榜单鱼丸榜、跳转榜、火力榜、鱼翅榜
        if (isToday) { //今日用户
            todayUserList = [].concat(userList);
            getYesterdayUserList(); //获取昨日用户列表数据
            renderFishBallRank(todayUserList); //羊王榜渲染
            var todayJumps = 0,
                todayDanmu = 0;
            for (let j = 0; j < userList.length; j++) {
                todayJumps += userList[j].jumpCount;
                todayDanmu += userList[j].danmuCount;
                todayFishBall += userList[j].fishBallIncome; //accountBall
                todayWing += userList[j].accountWing;
                todayFood += userList[j].fishFood;
                todayCash += userList[j].cashIncome;
                userList[j].cashIncome > 0 ? ++firePieData.awardUser : 0;
                new Date().getTime() - userList[j].activeTime < 200 * 1000 ? ++firePieData.activeUser : 0;
            }
            firePieData.dailyDanmu = todayDanmu;
            firePieData.dailyJump = todayJumps;

            document.getElementById("totalNum").setAttribute("total", todayJumps); //今日跳转总数
            totalNum($('#totalNum'), 50); //跳动渲染数据  

            document.getElementById("totalDanmu").setAttribute("total", todayDanmu); //今日弹幕总数
            totalNum($('#totalDanmu'), 100); //跳动渲染数据
            // console.info(todayUserList);
            document.getElementById("indicator1").setAttribute("total", todayUserList.length); //今日用户总数
            totalNum($('#indicator1'), 1); //跳动渲染
        } else {
            let yesterdayUserList = [].concat(userList);
            let yesterdayFishBall = 0,
                yesterdayWing = 0,
                yesterdayJump = 0,
                yesterdayDanmu = 0,
                yesterdayFood = 0,
                yesterdayCash = 0;
            for (let i = 0; i < yesterdayUserList.length; i++) {
                yesterdayJump += yesterdayUserList[i].jumpCount;
                yesterdayDanmu += yesterdayUserList[i].danmuCount;
                yesterdayFishBall += yesterdayUserList[i].fishBallIncome;
                yesterdayWing += yesterdayUserList[i].accountWing;
                yesterdayFood += yesterdayUserList[i].fishFood;
                yesterdayCash += yesterdayUserList[i].cashIncome;
            }
            $('#lastday_jump_num').text(yesterdayJump);
            $('#lastday_danmu_num').text(yesterdayDanmu);
            $('#lastday_fishball_num').text(yesterdayFishBall);
            $('#lastday_cash_num').text(yesterdayCash);
            // 渲染左上侧区域进度条
            document.getElementById("today_user_num").innerText = todayUserList.length + "/" + yesterdayUserList.length + "(人)";
            $('#today_user_progress').attr("progress", "30%");
            // if(yesterdayUserList.length>0){
            //     $('#today_user_progress').attr("progress", Math.round(todayUserList.length / yesterdayUserList.length * 100) + "%");
            // }else{
            //     $('#today_user_progress').attr("progress", "0%");
            // }
            // todayFishBall = todayFishBall * 100 / yesterdayFishBall < 1 ? Math.ceil(yesterdayFishBall / 100) : todayFishBall;
            document.getElementById("total_fish_ball").innerText = todayFishBall + "/" + yesterdayFishBall + "(丸)";
            $('#today_ball_progress').attr("progress", "60%")
            // if(yesterdayFishBall>0){
            //     $('#today_ball_progress').attr("progress", Math.round(todayFishBall / yesterdayFishBall * 100) + "%");
            // }else{
            //     $('#today_ball_progress').attr("progress", "0%");
            // }
            // todayCash = todayCash * 100 / yesterdayCash < 1 ? Math.ceil(yesterdayCash / 100) : todayCash;
            document.getElementById("today_red_cash").innerText = todayCash + "/" + yesterdayCash + "(元)";
            $('#today_cash_progress').attr("progress", "100%")
            // if(yesterdayCash>0){
            //     $('#today_cash_progress').attr("progress", Math.round(todayCash / yesterdayCash * 100) + "%");
            // }else{
            //     $('#today_cash_progress').attr("progress", "0%");    
            // }
            renderProgressEffect(); //开始渲染progress bar           
        }
    }

    function getYesterdayUserList() {
        getUserNumber(false); //获取昨日用户数，=====================================todo:数据聚合
    }
    // fetch("https://jumpstat-1253626683.cos.ap-beijing.myqcloud.com/JumpStat/" + dateFormat("YYYY-mm-dd", lastDay) + "-dailyStat.json", {
    //     method: 'GET',
    //     mode: 'cors',
    //     cache: 'default',
    //     credentials: 'omit',
    // }).then(res => {
    //     return res.json();
    // }).then(json => {
    //     renderUserNumber(false, json);
    // }).catch(err => {
    //     getUserNumber(false); //获取昨日用户数
    // })
    // function putYesterdayUserList(userList) {
    //     var prefixUrl = 'https://jumpstat-1253626683.cos.ap-beijing.myqcloud.com/';
    //     var key = "JumpStat/" + dateFormat("YYYY-mm-dd", lastDay) + "-dailyStat.json";
    //     var fd = new FormData();
    //     fd.append('key', key);
    //     fd.append('Content-Type', '');
    //     fd.append('file', JSON.stringify(userList));
    //     fetch(prefixUrl, {
    //         method: 'POST',
    //         mode: 'cors',
    //         body: fd,
    //         credentials: "omit",
    //     }).then(response => { // console.info(response);
    //         if (response.headers.get('ETag') != null) {
    //             console.info("UserListPut:Success");
    //         }
    //     }).catch(err => {
    //         console.warn("UserListPut:failure");
    //     })
    // }
    //============================================================ 
    //================== 昨日丸子与红包总和(左侧中) ================
    //============================================================      
    function yesterdayAllFishBall(yesterdayUserList) {

    }
    //============================================================ 
    //========== 获取并渲染内图1（火力房、跳转、红包排行） ============
    //============================================================ 
    // 获取火力房间排行数据（内图1-1）
    function fireRoomRankData(rmList) {
        firePieData.fireNode = rmList.length; //火力节点数目
        var newArr = [];
        for (let i = 0; i < rmList.length; i++) { //按房间号去重
            for (let j = i + 1; j < rmList.length; j++) {
                if (rmList[i].rid === rmList[j].rid) {
                    j = ++i;
                }
            }
            newArr.push(rmList[i]);
        }
        var newArr2 = new Array(newArr.length);
        for (var t = 0; t < newArr2.length; t++) { //计数数组赋值为空
            newArr2[t] = 0;
        }
        for (var p = 0; p < newArr.length; p++) { //计数重复的数组
            for (var j = 0; j < rmList.length; j++) {
                if (newArr[p].rid == rmList[j].rid) {
                    newArr2[p]++;
                }
            }
        }
        var newArr3 = [];
        for (var m = 0; m < newArr.length; m++) { //聚合
            newArr3.push({
                "roomId": newArr[m].rid,
                "count": newArr2[m]
            });
        }
        newArr3.sort(function (a, b) { //排序
            return b.count - a.count;
        });
        firePieData.fireRoom = newArr3.length; //火力房间数
        renderFireRoomRank(newArr3);
        // console.log(newArr3);//火力房间排行榜数据
    }
    // 渲染十大火力房间排行（内图1-1）
    function renderFireRoomRank(fireRoomList) {
        let xData = [];
        let yData = [];
        console.info(fireRoomList);
        for (let i = 0; i < 10; i++) {
            if(fireRoomList[i]==undefined){
                xData.push(1);
                yData.push('缺席');                
            }else{
                xData.push(fireRoomList[i].count);
                yData.push(fireRoomList[i].roomId);
            }
        }
        // fireRoomList = [];//用完置空
        fireRankChart.setOption({
            yAxis: {
                data: yData,
            },
            series: [{
                name: "房间开火次数",
                data: xData,
            }]
        });
        fireRankChart.on('click', function (e) {
            window.open('https://bojianger.com/anchor-search-result.html?keyword=' + e.name);
        });
    }
    // 获取福利房间排行数据（内图1-2）
    function lottRoomRankData(rmList) {
        var newArr = [];
        for (let i = 0; i < rmList.length; i++) { //按房间号去重
            for (let j = i + 1; j < rmList.length; j++) {
                if (rmList[i].rid === rmList[j].rid) {
                    j = ++i;
                }
            }
            newArr.push(rmList[i]);
        }
        var newArr2 = new Array(newArr.length);
        for (var t = 0; t < newArr2.length; t++) { //计数数组赋值为空
            newArr2[t] = 0;
        }
        for (var p = 0; p < newArr.length; p++) { //计数重复的数组
            for (var j = 0; j < rmList.length; j++) {
                if (newArr[p].rid == rmList[j].rid) {
                    newArr2[p]++;
                }
            }
        }
        var newArr3 = [];
        for (var m = 0; m < newArr.length; m++) { //聚合
            newArr3.push({
                "roomId": newArr[m].rid,
                "count": newArr2[m]
            });
        }
        newArr3.sort(function (a, b) { //排序
            return b.count - a.count;
        });
        // firePieData.fireRoom = newArr3.length; //火力房间数
        renderLottRoomRank(newArr3);
        // console.log(newArr3);//火力房间排行榜数据
    }
    // 渲染福利房间排行榜(内图1-2)
    function renderLottRoomRank(lottRoomList) {
        let xData = [];
        let yData = [];
        for (let i = 0; i < 10; i++) {
            if(lottRoomList[i]==undefined){
                xData.push(1);
                yData.push('缺席');
            }else{
                xData.push(lottRoomList[i].count);
                yData.push(lottRoomList[i].roomId);
            }
        }
        // fireRoomList = [];//用完置空
        lottRankChart.setOption({
            yAxis: {
                data: yData,
            },
            series: [{
                name: "房间抽奖次数",
                data: xData,
            }]
        });
        lottRankChart.on('click', function (e) {
            window.open('https://bojianger.com/anchor-search-result.html?keyword=' + e.name);
        });
    }
    // 渲染跳转次数榜(内图1-3)
    function renderJumpTimesRank(todayUserList) {
        todayUserList.sort(function (a, b) {
            return b.jumpCount - a.jumpCount;
        });
        let xData = [];
        let yData = [];
        for (let i = 0; i < 10; i++) {
            if (todayUserList[i] != undefined) {
                xData.push({
                    value: todayUserList[i].jumpCount,
                    url: todayUserList[i].uid
                });
                yData.push(todayUserList[i].uname);
            } else {
                xData.push({
                    value: 1,
                    url: 99999
                });
                yData.push('缺席');
            }
        }
        jumpRankChart.setOption({
            yAxis: {
                data: yData
            },
            series: [{
                name: "用户跳转次数",
                data: xData
            }]
        });
        jumpRankChart.on('click', function (e) {
            window.open('https://bojianger.com/anchor-search-result.html?keyword=' + e.data.url);
        });
    }
    //开始渲染progress bar（进度条左上）
    function renderProgressEffect() {
        $('.progress').each(function (i, ele) {
            var PG = $(ele).attr('progress');
            var PGNum = parseInt(PG);
            var zero = 0;
            var speed = 50;
            var timer;
            $(ele).find('h4').html(zero + '%');
            if (PGNum < 10) {
                $(ele).find('.progressBar span').addClass('bg-red');
                $(ele).find('h3 i').addClass('color-red');
            } else if (PGNum >= 10 && PGNum < 50) {
                $(ele).find('.progressBar span').addClass('bg-yellow');
                $(ele).find('h3 i').addClass('color-yellow');
            } else if (PGNum >= 50 && PGNum < 100) {
                $(ele).find('.progressBar span').addClass('bg-blue');
                $(ele).find('h3 i').addClass('color-blue');
            } else {
                $(ele).find('.progressBar span').addClass('bg-green');
                $(ele).find('h3 i').addClass('color-green');
            }
            $(ele).find('.progressBar span').animate({
                width: PG
            }, PGNum * speed);
            timer = setInterval(function () {
                $(ele).find('h4').html(zero + '%');
                if (zero == PGNum) {
                    clearInterval(timer);
                }
                zero++;
            }, speed);
        });
    }
    //============================================================ 
    //============= AI机器人和Github网页延迟和异常监测 =============
    //============================================================ 
    // AI机器人延迟和异常监测
    function AIDelayMonitor() {
        let startTime = new Date().getTime();
        let arrCommon = ["主播加油💪", "666🤘🤘🤘", "点击关注，不会迷路", "🐤冲鸭🐤冲鸭🐤", "我来冒个泡，🧐憨憨", "火力全开", "暴躁起来", "小礼物🎁刷起来", "一发入魂哈🔫", "憨憨", "热度", "键盘敲稀巴烂", "火力全开中ญ๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊中ญ๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊中ญ๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊๊",
            "可以夸下🐷播", "懒得打字", "神奇的主播", "优质的弹幕", "水军来捧，主播威猛", "铁粉驾到，热度必爆", "自家人，别误伤", "幻神", "加油助威🚀*10！", "这谁顶得住", "好了", "什么车队", "666", "奈斯", "左边拉满",
            "🛸*1000", "越来越红", "越来越火", "越来越富", "越来越强👍", "กิิิิิ荧กิิิิิิิิิิิ光กิิิิิิิิิิิ棒กิิิิิ", "来个办卡💳", "我又回来了", "打卡签到", "感谢小礼物", "火力必中", "欢迎", "小伙伴", "来波福利吧", "丸子不止", "弹幕不停", "不服来战"
        ];
        fetch('https://api.ownthink.com/bot?appid=xiaosi&spoken=' + arrCommon[parseInt(Math.random() * arrCommon.length)], {
            // fetch('https://api.ownthink.com/bot?appid=xiaosi&spoken=请求测试',{
            method: 'GET',
            mode: 'cors',
            cache: 'no-store',
            credentials: 'omit'
        }).then(res => {
            return res.json();
        }).then(json => {
            if (json.message == "success" && json.data.type == 5000) {
                let delayTime = ((new Date().getTime() - startTime) / 1000).toFixed(1);
                $('#robot_delay_time').text(delayTime + 's');
            } else {
                $('#robot_delay_time').text('异常');
            }
        }).catch(err => {
            $('#robot_delay_time').text("挂了");
            // console.warn('REQUEST ERROR', err);
        })
        $('#web_today_ip').text(parseInt(Math.random() * 100 + 200));
        $('#web_today_pv').text(parseInt(Math.random() * 300 + 300));
        $('#cloud_danmu_num').text(parseInt(Math.random() * 400 + 600));
    }
    // 服务器延迟测试
    function getServerDelay() {
        let startTime = new Date().getTime();
        let reqUrl = serverUrl + '/getpoetry';
        fetch(reqUrl, {
            method: 'GET',
            mode: 'cors',
            cache: 'no-store',
            credentials: 'omit'
        }).then(res => {
            return res.json();
        }).then(json => {
            if (json.code == 1) {
                let delayTime = ((new Date().getTime() - startTime) / 1000).toFixed(1);
                $('#server_delay_time').text(delayTime + 's');
            } else {
                $('#server_delay_time').text('异常');
            }
        }).catch(err => {
            $('#server_delay_time').text("挂了");
        })
    }
    //github延迟和异常监测
    function GitHubDelayMonitor() {
        let startTime = new Date().getTime();
        let reqUrl = 'https://raw.githubusercontent.com/popzoo/zoo/master/index.html';
        fetch(reqUrl, {
            method: 'GET',
            mode: 'cors',
            cache: 'no-store',
            credentials: 'omit',
        }).then(res => {
            if (res != null) {
                let delayTime = ((new Date().getTime() - startTime) / 1000).toFixed(1);
                $('#github_delay_time').text(delayTime + 's');
            } else {
                $('#github_delay_time').text('异常');
            }
        }).catch(err => {
            $('#github_delay_time').text("挂了");
            // console.warn('REQUEST ERROR', err);
        })
    }
    //============================================================ 
    //=============== 渲染滚动福利社礼品字幕（右下） ===============
    //============================================================     
    function scrollNodeData(rmList) {
        let scrollDiv = document.getElementById("FontScroll");
        let ulTag = document.createElement("ul");
        ulTag.setAttribute("class", "line");
        var ulContent = "";
        // console.info(rmList);
        for (let i = rmList.length - 1; i > 0; i--) {
            // for(let i=0;i<rmList.length;i++){
            // rmList[i].donator == undefined ? rmList[i].uname = "匿名" : false;
            ulContent += "<li><div class='fontInner clearfix'><span>" + rmList[i].prizeName; //.substring(0, 2) + "**";
            ulContent += "</span><span>" + dateFormat("HH:MM:SS", new Date(rmList[i].endTime * 1000));
            ulContent += "</span><span><a href='https://www.douyu.com/" + rmList[i].rid + "' style='color:cyan;' target='_blank'>";
            ulContent += rmList[i].rid + "</a></span></div></li>";
            // console.info(dateFormat("HH:MM:SS",new Date(rmList[i].sendTime)));
            // console.info(rmList[i].roomId);
        }
        ulTag.innerHTML = ulContent;
        scrollDiv.append(ulTag);
        //贡献节点信息状态滚动
        $('#FontScroll').FontScroll({
            time: 3000,
            num: 1
        }); //每隔3s滚动一条
    }
    var todayHourDataY = [];
    var yesterdayHourDataY = [];
    //火力房间时段榜（中图下）
    function getDiffHourData(rmList, isToday) {
        var newArr2 = new Array(24);
        for (var t = 0; t < newArr2.length; t++) { //计数数组赋值为空
            newArr2[t] = 0;
        }
        for (var p = 0; p < newArr2.length; p++) { //计数重复的数组
            for (var j = 0; j < rmList.length; j++) {
                if (new Date(rmList[j].endTime * 1000).getHours() == p) { //notice 火力去掉1000
                    newArr2[p]++;
                }
            }
        }

        if (isToday) {
            todayHourDataY = [].concat(newArr2);
        } else {
            yesterdayHourDataY = [].concat(newArr2);
        }
        if (todayHourDataY != [] && yesterdayHourDataY != []) {
            renderDiffHourTable(todayHourDataY); //处理火力时段分布数据并渲染
        }
        // console.log(newArr2);//不同火力时段数据
    }
    //======================================================================================================================== 
    //++++++++++++ 入口3 (昨日火力合计，昨日抽奖合计，今日实时火力数，今日实时抽奖数，初次请求数60~70，二次请求数6个) ++++++++++++++++
    //======================================================================================================================== 
    //渲染昨日的节点数据  
    function renderYesterdayData(rmList, isFire) {
        if (isFire) {
            document.getElementById("lastday_fire_num").innerText = rmList.length;
        } else {
            document.getElementById("lastday_welfare_num").innerText = rmList.length;
            getDiffHourData(rmList, false); //昨日福利时段数据渲染
        }
    }
    // 渲染今日节点数据
    var todayFireList = [];
    var todayLottList = [];

    function renderTodayNodeData(rmList, isFire) {
        if (isFire) {
            todayFireList = [].concat(rmList); //暂存
            // getFireLottoList(false, true); //获取今日抽奖数
            document.getElementById("indicator2").setAttribute("total", rmList.length); //今日火力数
            totalNum($('#indicator2'), 30); //跳动渲染
        } else {
            todayLottList = [].concat(rmList);
            getDiffHourData(rmList, true); //处理火力不同时段数据
            scrollNodeData(rmList); // 渲染滚动贡献节点数据
            document.getElementById("indicator3").setAttribute("total", rmList.length); //今日福利数
            totalNum($('#indicator3'), 10); //跳动渲染
        }
    }
    // 获取顺序昨日火力-->昨日抽奖-->今日火力-->今日抽奖，数据获取入口
    function getFireLottoList(isFire, isToday) {
        var roomList = new Array();
        var reqUrl = "";
        if (isFire) {
            reqUrl = isToday ? "/getdayfire" : '/getdayfire?date=' + dateFormat('YYYY-mm-dd', lastDay);
        } else {
            reqUrl = isToday ? "/getdaylotto" : '/getdaylotto?date=' + dateFormat('YYYY-mm-dd', lastDay);
        }
        fetch(serverUrl + reqUrl, {
            method: 'GET',
            mode: 'cors',
            cache: 'no-store',
            headers: {
                'Authorization': localStorage.getItem('token')
            },
            credentials: 'same-origin'
        }).then(result => {
            return result.json();
        }).then(json => {
            if (json != undefined) {
                roomList = [].concat(json);
                if (isToday) {
                    renderTodayNodeData(roomList, isFire); //出口
                } else {
                    if (isFire) {
                        // getFireLottoList(false, false); //昨日火力数据已合计,开始获取昨日抽奖
                        renderYesterdayData(roomList, true);
                        // putLastDayStatNode(roomList,true);
                    } else {
                        renderYesterdayData(roomList, false);
                        // getFireLottoList(true, true); //获取今日火力数据
                        // putLastDayStatNode(roomList,false);
                    }
                }
            }
        }).catch(err => {
            console.error('ERROR', err);
        })

    }
    // 获取昨日分享节点
    // function getLastDayStatNode(isFire) {
    //     let reqUrl1 = 'https://firepower-1253626683.cos.ap-beijing.myqcloud.com/FireNode/' + dateFormat("YYYY-mm-dd", lastDay) + '/all-fireInfo.json';
    //     let reqUrl2 = 'https://welfare-1253626683.cos.ap-beijing.myqcloud.com/WelfareNode/' + dateFormat("YYYY-mm-dd", lastDay) + '/all-welfareInfo.json';
    //     let reqUrl = isFire ? reqUrl1 : reqUrl2;
    //     fetch(reqUrl, {
    //         method: 'GET',
    //         mode: 'cors',
    //         cache: 'default',
    //         credentials: 'omit',
    //     }).then(res => {
    //         return res.json();
    //     }).then(jsonData => {
    //         if (isFire) { // console.info("获取昨日火力数目："+jsonData.length);
    //             getLastDayStatNode(false); //数据已合计,开始获取昨日抽奖              
    //             renderYesterdayData(jsonData, true);
    //         } else { // console.info("获取昨日抽奖数目："+jsonData.length);
    //             renderYesterdayData(jsonData, false);
    //         }
    //     }).catch(err => {
    //         isFire ? getFireLottoList(true, false) : getFireLottoList(false, false);
    //         // console.error('请求错误', err);
    //     })
    // }    
    // 上传昨日分享节点汇总统计
    // function putLastDayStatNode(rmList, isFire) {
    //     let reqUrl1 = 'https://firepower-1253626683.cos.ap-beijing.myqcloud.com/FireNode/' + dateFormat("YYYY-mm-dd", lastDay) + '/all-fireInfo.json';
    //     let reqUrl2 = 'https://welfare-1253626683.cos.ap-beijing.myqcloud.com/WelfareNode/' + dateFormat("YYYY-mm-dd", lastDay) + '/all-welfareInfo.json';
    //     let reqUrl = isFire ? reqUrl1 : reqUrl2;
    //     fetch(reqUrl, {
    //         method: 'PUT', //post
    //         headers: {
    //             'Content-Type': 'application/json; charset=utf-8'
    //         },
    //         body: JSON.stringify(rmList),
    //         credentials: "omit",
    //     }).then(response => {
    //         isFire ? console.info("FireDetailPut:Success") : console.info("WelfareDetailPut:Success");
    //     }).catch(err => {
    //         isFire ? console.error("FireDetailPut:failure") : console.error("WelfareDetailPut:failure");
    //     })
    // }
    // 等待数据加载完后执行跳动渲染
    // setTimeout(function(){ 	
    //今日实时统计
    // totalNum($('#indicator1'),1);
    // totalNum($('#indicator2'),1);
    // totalNum($('#indicator3'),1);
    //总跳转次数	
    // totalNum($('#totalNum'),400);
    // myChart1.setOption(option1);
    // },500);

    /***************2020-01-05增加js****************/
    //近几日薅羊毛用户数和红包、鱼丸收益趋势图(内图)    
    var fireRankChart, lottRankChart, jumpRankChart, summaryPie1, summaryPie2, summaryPie3;

    function setSummary() {
        //获取排行数据
        fireRankChart = echarts.init(document.getElementById("summaryBar1"), "shine");
        var fireRankChartOpt = {
            title: {
                text: '﹃\n火\n力\n榜\n﹄',
                subtext: '@\n十\n大\n火\n力\n房\n闪\n亮\n登\n场',
                textStyle: {
                    color: '#FFD700',
                    fontSize: 20,
                },
                subtextStyle: {
                    color: '#FFB90F',
                    fontSize: 14,
                }
            },
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "shadow"
                },
                formatter: function (params) {
                    const param = params[0];
                    const marker = '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#FFB90F;"></span>';
                    // const suffix = '<span style="margin-left:5px;font-size:12px;">次</span>';
                    return "直播间号：" + param.name + "<br />" +
                        marker + "火力排名：" + (param.dataIndex + 1) + "<br />" +
                        marker + "开火次数：" + param.value;
                }
            },
            grid: {
                top: 10,
                bottom: 10,
                left: 100
            },
            xAxis: {
                show: false,
                type: "value"
            },
            yAxis: {
                type: "category",
                inverse: true,
                axisLine: {
                    show: false
                },
                axisTick: {
                    show: false
                },
                axisLabel: {
                    fontSize: 12,
                    color: "#FFB90F"
                }
            },
            series: [{
                name: "房间开火次数",
                type: "bar",
                barCategoryGap: "60%",
                label: {
                    show: true,
                    position: "right",
                    fontSize: 12,
                    color: "#FFB90F",
                    emphasis: {
                        color: "#FF8C00"
                    }
                },
                itemStyle: {
                    normal: {
                        barBorderRadius: [5, 5, 5, 5],
                        color: new echarts.graphic.LinearGradient(
                            0, 1, 1, 1, [{
                                offset: 0,
                                color: '#FFFFE0'
                            }, {
                                offset: 0.5,
                                color: '#FFD700'
                            }, {
                                offset: 1,
                                color: '#FF8C00'
                            }]
                        )
                    },
                    emphasis: {
                        color: new echarts.graphic.LinearGradient(
                            0, 1, 1, 1, [{
                                offset: 0,
                                color: '#FFFFE0'
                            }, {
                                offset: 0.7,
                                color: '#FFD700'
                            }, {
                                offset: 1,
                                color: '#FF8C00'
                            }]
                        )
                    }
                }
            }]
        };
        fireRankChart.setOption(fireRankChartOpt);
        fireRoomRankData(todayFireList); //处理火力排行与火力房间数，并渲染
        // 处理火力排行与火力房间数，并渲染
        lottRankChart = echarts.init(document.getElementById("summaryBar2"), "shine");
        var lottRankChartOpt = {
            title: {
                text: '﹃\n福\n利\n榜\n﹄',
                subtext: '@\n十\n大\n福\n利\n房\n横\n空\n出\n世',
                textStyle: {
                    color: 'cyan',
                    fontSize: 20,
                },
                subtextStyle: {
                    color: '#98F5FF',
                    fontSize: 14,
                }
            },
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "shadow"
                },
                formatter: function (params) {
                    const param = params[0];
                    const marker = '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#e6b600;"></span>';
                    // const suffix = '<span style="margin-left:5px;font-size:12px;">次</span>';
                    return "直播间号：" + param.name + "<br />" +
                        marker + "福利排名：" + (param.dataIndex + 1) + "<br />" +
                        marker + "抽奖次数：" + param.value;
                }
            },
            grid: {
                top: 10,
                bottom: 10,
                left: 100
            },
            xAxis: {
                show: false,
                type: "value"
            },
            yAxis: {
                type: "category",
                inverse: true,
                axisLine: {
                    show: false
                },
                axisTick: {
                    show: false
                },
                axisLabel: {
                    fontSize: 12,
                    color: "#97FFFF"
                }
            },
            series: [{
                name: "房间抽奖次数",
                type: "bar",
                barCategoryGap: "60%",
                label: {
                    show: true,
                    position: "right",
                    fontSize: 12,
                    color: "#97FFFF",
                    emphasis: {
                        color: "#97FFFF"
                    }
                },
                itemStyle: {
                    normal: {
                        barBorderRadius: [5, 5, 5, 5],
                        color: new echarts.graphic.LinearGradient(
                            0, 1, 1, 1, [{
                                offset: 0,
                                color: '#F0F8FF'
                            }, {
                                offset: 0.5,
                                color: '#00CED1'
                            }, {
                                offset: 1,
                                color: '#008B8B'
                            }]
                        )
                    },
                    emphasis: {
                        color: new echarts.graphic.LinearGradient(
                            0, 1, 1, 1, [{
                                offset: 0,
                                color: '#F0F8FF'
                            }, {
                                offset: 0.7,
                                color: '#00CED1'
                            }, {
                                offset: 1,
                                color: '#008B8B'
                            }]
                        )
                    }
                }
            }]
        };
        lottRankChart.setOption(lottRankChartOpt);
        lottRoomRankData(todayLottList); //处理福利排行与火力房间数，并渲染

        jumpRankChart = echarts.init(document.getElementById("summaryBar3"), "shine");
        var jumpRankChartOpt = {
            title: {
                text: '﹃\n跳\n转\n榜\n﹄',
                subtext: '@\n十\n大\n跳\n转\n榜\n横\n空\n出\n世',
                textStyle: {
                    color: '#EE7AE9',
                    fontSize: 20,
                },
                subtextStyle: {
                    color: '#E066FF',
                    fontSize: 14,
                }
            },
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "shadow"
                },
                formatter: function (params) {
                    const param = params[0];
                    const marker = '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#E066FF;"></span>';
                    // const suffix = '<span style="margin-left:5px;font-size:12px;">次</span>';
                    return "用户尊称：" + param.name + "<br />" +
                        marker + "跳转排名：" + (param.dataIndex + 1) + "<br />" +
                        marker + "跳转次数：" + param.value;
                }
            },
            grid: {
                top: 10,
                bottom: 10,
                left: 100
            },
            xAxis: {
                show: false,
                type: "value"
            },
            yAxis: {
                type: "category",
                inverse: true,
                axisLine: {
                    show: false
                },
                axisTick: {
                    show: false
                },
                axisLabel: {
                    fontSize: 12,
                    color: "#E066FF"
                }
            },
            series: [{
                name: "用户跳转次数",
                type: "bar",
                barCategoryGap: "60%",
                label: {
                    show: true,
                    position: "right",
                    fontSize: 12,
                    color: "#E066FF",
                    emphasis: {
                        color: "#E066FF"
                    }
                },
                itemStyle: {
                    normal: {
                        barBorderRadius: [5, 5, 5, 5],
                        color: new echarts.graphic.LinearGradient(
                            0, 1, 1, 1, [{
                                offset: 0,
                                color: '#EED2EE'
                            }, {
                                offset: 0.5,
                                color: '#E066FF'
                            }, {
                                offset: 1,
                                color: '#CD00CD'
                            }]
                        )
                    },
                    emphasis: {
                        color: new echarts.graphic.LinearGradient(
                            0, 1, 1, 1, [{
                                offset: 0,
                                color: '#EED2EE'
                            }, {
                                offset: 0.7,
                                color: '#E066FF'
                            }, {
                                offset: 1,
                                color: '#CD00CD'
                            }]
                        )
                    }
                }
            }]
        };
        jumpRankChart.setOption(jumpRankChartOpt);
        renderJumpTimesRank(todayUserList); //处理火力排行与火力房间数，并渲染
        // 大饼图
        var pieData;
        var ww = $(window).width();
        if (ww > 1600) {
            pieData = {
                pieTop: '40%',
                // pieTop2: '36%',
                titleSize: 20,
                pieRadius: [80, 85],
                itemSize: 32
            }
        } else {
            pieData = {
                pieTop: '35%',
                // pieTop2: '26%',
                titleSize: 16,
                pieRadius: [60, 64],
                itemSize: 28
            }
        };
        //弹出框调用ECharts饼图
        summaryPie1 = echarts.init(document.getElementById('summaryPie1'));
        var pieOption1 = {
            title: {
                x: 'center',
                y: pieData.pieTop,
                text: '火力比',
                textStyle: {
                    fontWeight: 'normal',
                    color: '#ffd325',
                    fontSize: pieData.titleSize,
                },
                subtext: '总火力数：' + firePieData.fireNode + '个\n总火力房：' + firePieData.fireRoom + '个',
                subtextStyle: {
                    color: '#fff',
                }
            },
            tooltip: {
                show: false,
            },
            toolbox: {
                show: false,
            },
            series: [{
                type: 'pie',
                clockWise: false,
                radius: pieData.pieRadius,
                hoverAnimation: true,
                center: ['50%', '50%'],
                data: [{
                    value: parseInt(firePieData.fireRoom / firePieData.fireNode * 100),
                    label: {
                        normal: {
                            formatter: '{d}%',
                            position: 'outside',
                            show: true,
                            textStyle: {
                                fontSize: pieData.itemSize,
                                fontWeight: 'normal',
                                color: '#ffd325'
                            }
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: '#ffd325',
                            shadowColor: '#ffd325',
                            shadowBlur: 10
                        }
                    }
                }, {
                    value: 100 - parseInt(firePieData.fireRoom / firePieData.fireNode * 100),
                    // name: '未工作',
                    itemStyle: {
                        normal: {
                            color: 'rgba(44,59,70,1)', // 未完成的圆环的颜色
                            label: {
                                show: false
                            },
                            labelLine: {
                                show: false
                            }
                        },
                        emphasis: {
                            color: 'rgba(44,59,70,1)' // 未完成的圆环的颜色
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: '#11284e',
                            shadowColor: '#11284e',
                        }
                    },
                }]
            }]
        }
        summaryPie2 = echarts.init(document.getElementById('summaryPie2'));
        var pieOption2 = {
            title: {
                x: 'center',
                y: pieData.pieTop,
                text: '活跃比',
                textStyle: {
                    fontWeight: 'normal',
                    color: '#32ffc7',
                    fontSize: pieData.titleSize
                },
                subtext: '活跃用户：' + firePieData.activeUser + '人\n今日用户：' + todayUserList.length + '人',
                subtextStyle: {
                    color: '#fff',
                }
            },
            tooltip: {
                show: false,
            },
            toolbox: {
                show: false,
            },

            series: [{
                type: 'pie',
                clockWise: false,
                radius: pieData.pieRadius,
                hoverAnimation: true,
                center: ['50%', '50%'],
                data: [{
                    value: parseInt(firePieData.activeUser / todayUserList.length * 100),
                    label: {
                        normal: {
                            formatter: '{d}%',
                            position: 'outside',
                            show: true,
                            textStyle: {
                                fontSize: pieData.itemSize,
                                fontWeight: 'normal',
                                color: '#32ffc7'
                            }
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: '#32ffc7',
                            shadowColor: '#32ffc7',
                            shadowBlur: 10
                        }
                    }
                }, {
                    value: 100 - parseInt(firePieData.activeUser / todayUserList.length * 100),
                    // name: '未工作',
                    itemStyle: {
                        normal: {
                            color: 'rgba(44,59,70,1)', // 未完成的圆环的颜色
                            label: {
                                show: false
                            },
                            labelLine: {
                                show: false
                            }
                        },
                        emphasis: {
                            color: 'rgba(44,59,70,1)' // 未完成的圆环的颜色
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: '#11284e',
                            shadowColor: '#11284e',
                        }
                    },
                }]
            }]
        }
        summaryPie3 = echarts.init(document.getElementById('summaryPie3'));
        var pieOption3 = {
            title: {
                x: 'center',
                y: pieData.pieTop,
                text: '中奖比',
                textStyle: {
                    fontWeight: 'normal',
                    color: "#E066FF",
                    fontSize: pieData.titleSize
                },
                subtext: '中奖用户：' + firePieData.awardUser + '人\n今日用户：' + todayUserList.length + '人',
                subtextStyle: {
                    color: '#fff',
                }
            },
            tooltip: {
                show: false,
            },
            toolbox: {
                show: false,
            },

            series: [{
                type: 'pie',
                clockWise: false,
                radius: pieData.pieRadius,
                hoverAnimation: true,
                center: ['50%', '50%'],
                data: [{
                    value: parseInt(firePieData.awardUser / todayUserList.length * 100),
                    label: {
                        normal: {
                            formatter: '{d}%',
                            position: 'outside',
                            show: true,
                            textStyle: {
                                fontSize: pieData.itemSize,
                                fontWeight: 'normal',
                                color: "#E066FF"
                            }
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: '#E066FF',
                            shadowColor: '#E066FF',
                            shadowBlur: 10
                        }
                    }
                }, {
                    value: 100 - parseInt(firePieData.awardUser / todayUserList.length * 100),
                    // name: '未工作',
                    itemStyle: {
                        normal: {
                            color: 'rgba(44,59,70,1)', // 未完成的圆环的颜色
                            label: {
                                show: false
                            },
                            labelLine: {
                                show: false
                            }
                        },
                        emphasis: {
                            color: 'rgba(44,59,70,1)' // 未完成的圆环的颜色
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: '#11284e',
                            shadowColor: '#11284e',
                        }
                    },
                }]
            }]
        }
        summaryPie1.setOption(pieOption1);
        summaryPie2.setOption(pieOption2);
        summaryPie3.setOption(pieOption3);
        fireRankChart.resize(); //解决重打开尺寸异常
    }

    // 弹窗
    $('.search').on('click', function () {
        $('.filterbg').show();
        $('.popup').show();
        $('.popup').width('3px');
        $('.popup').animate({
            height: '76%'
        }, 400, function () {
            $('.popup').animate({
                width: '82%'
            }, 400);
        });
        setTimeout(summaryShow, 800);
    });
    $('.popupClose').on('click', function () {
        $('.popupClose').css('display', 'none');
        $('.summary').hide();
        fireRankChart.clear();
        lottRankChart.clear();
        jumpRankChart.clear();
        summaryPie1.clear();
        summaryPie2.clear();
        summaryPie3.clear();
        $('.popup').animate({
            width: '3px'
        }, 400, function () {
            $('.popup').animate({
                height: 0
            }, 400);
        });
        setTimeout(summaryHide, 800);
    });

    function summaryShow() {
        $('.popupClose').css('display', 'block');
        $('.summary').show();
        setSummary();
    };

    function summaryHide() {
        $('.filterbg').hide();
        $('.popup').hide();
        $('.popup').width(0);
    };

    // 尺寸自适应调整
    $(window).resize(function () {
        myChart0.resize();
        myChart1.resize();
        // trendChart.resize();
        var canvas = $('#canvas');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        try {
            fireRankChart.resize();
            lottRankChart.resize();
            jumpRankChart.resize();
            summaryPie1.resize();
            summaryPie2.resize();
            summaryPie3.resize();
            trendChart.resize();
        } catch (err) {
            return false;
        }
    });

    /***************2020-01-05增加js****************/
    //近几日薅羊毛用户数和红包、鱼丸收益趋势图
    var trendChart;

    function setMonthlyChart() {
        trendChart = echarts.init(document.getElementById("trendChart"), "shine");
        var trendChartOpt = {
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "none"
                },
                formatter: function (params) {
                    return '鱼丸数：' + params[0].value + '万丸<br/>红包数：' + params[1].value + '元<br/>用户数：' + params[2].value + '人';
                }
            },
            legend: {
                left: "center",
                bottom: 3,
                itemWidth: 15,
                itemHeight: 10,
                textStyle: {
                    fontSize: 12,
                    color: "#b0c2f9"
                },
                data: ["鱼丸数", "红包数", "用户数"]
            },
            grid: {
                top: 40,
                bottom: 50,
                left: 60,
                right: 60
            },
            xAxis: {
                type: "category",
                axisLine: {
                    lineStyle: {
                        color: "#b0c2f9"
                    }
                },
                axisTick: {
                    show: false
                },
                axisLabel: {
                    fontSize: 12,
                    color: "#b0c2f9"
                }
            },
            yAxis: [{
                name: "数额(元或万鱼丸)",
                type: "value",
                splitNumber: 5,
                axisLine: {
                    lineStyle: {
                        color: "#b0c2f9"
                    }
                },
                splitLine: {
                    show: false
                },
                axisTick: {
                    color: "#b0c2f9"
                },
                axisLabel: {
                    fontSize: 12,
                    color: "#b0c2f9"
                    // formatter: (value, index) => {
                    // 	return parseInt(value / 10000) + "元/万丸";
                    // }
                }
            }, {
                name: "人数",
                type: "value",
                splitNumber: 100,
                // maxInterval: 5,
                // minInterval: 5,
                interval: 100,
                axisLine: {
                    lineStyle: {
                        color: "#b0c2f9"
                    }
                },
                splitLine: {
                    show: false
                },
                axisTick: {
                    color: "#b0c2f9"
                },
                axisLabel: {
                    fontSize: 12,
                    color: "#b0c2f9",
                    formatter: (value, index) => {
                        return parseInt(value) + "人";
                    }
                }
            }],
            visualMap: { //线条颜色
                show: false,
                seriesIndex: 2,
                dimension: 0,
                pieces: [{
                    lte: 10,
                    color: "lime"
                }, {
                    gt: 10,
                    lte: 20,
                    color: "cyan"
                }]
            },
            series: [{
                name: "鱼丸数",
                type: "pictorialBar",
                symbol: 'path://d="M150 50 L130 130 L170 130  Z"',
                barCategoryGap: "40%",
                itemStyle: {
                    color: function (params) {
                        if (params.dataIndex >= 10) {
                            return "rgba(119, 96, 246, 1)";
                        }
                        return "rgba(119, 96, 246, 0.8)";
                    }
                },
                markPoint: {
                    itemStyle: {
                        color: "rgba(119, 96, 246, 1)"
                    },
                    data: [{
                        type: 'max',
                        name: '最大值'
                    }, {
                        type: 'min',
                        name: '最小值'
                    }]
                },
                markLine: {
                    lineStyle: {
                        color: "rgba(119, 96, 246, 1)"
                    },
                    label: {
                        position: "middle",
                        formatter: "平均鱼丸数：{c}万鱼丸"
                    },
                    data: [{
                        name: "平均值",
                        type: "average"
                    }]
                }
            }, {
                name: "红包数",
                type: "pictorialBar",
                symbol: 'path://d="M150 50 L130 130 L170 130  Z"',
                barCategoryGap: "40%",
                itemStyle: {
                    color: function (params) {
                        if (params.dataIndex >= 10) {
                            return "rgba(230, 182, 0, 1)";
                        }
                        return "rgba(230, 182, 0, 0.8)";
                    }
                },
                markPoint: {
                    itemStyle: {
                        color: "rgba(230, 182, 0, 1)"
                    },
                    data: [{
                        type: 'max',
                        name: '最大值'
                    }, {
                        type: 'min',
                        name: '最小值'
                    }]
                },
                markLine: {
                    lineStyle: {
                        color: "rgba(230, 182, 0, 1)"
                    },
                    label: {
                        position: "middle",
                        formatter: "平均红包数：{c}元"
                    },
                    data: [{
                        name: "平均值",
                        type: "average"
                    }]
                }
            }, {
                name: "用户数",
                type: "line",
                yAxisIndex: 1
            }]
        };
        trendChart.setOption(trendChartOpt);
        // handleMonthlyData();
    }
    // 处理月度数据
    // {date:0,fishBall:0,cashIncome:0,jumpCount:0,danmuCount:0,dailyJumpNum:0,dailyDanmuNum:0,newVersionUser:0,fireNode:0,welfareNode:0};     
    function handleMonthlyData() { }

    //信息弹出框的显示隐藏效果
    $('.infoBtn').on('click', function () {
        // if(adminCheck == "💡🔒💡" || userCheck =="⛑👩‍⚕️⛑"){
        $('.filterbg').show();
        $('.carInfo').show();
        $('.carInfo').width('3px');
        $('.carInfo').animate({
            height: '76%'
        }, 400, function () {
            $('.carInfo').animate({
                width: '82%'
            }, 400);
        });
        setTimeout(monthChartShow, 800);
        // }
    });

    function monthChartShow() {
        $('.infoBox').show();
        $('.carClose').css('display', 'block');
        setMonthlyChart();
    }
    $('.carClose').on('click', function () {
        $('.carClose').css('display', 'none');
        $('.infoBox').hide();
        trendChart.clear();
        $('.carInfo').animate({
            width: '3px'
        }, 400, function () {
            $('.carInfo').animate({
                height: 0
            }, 400);
        });
        setTimeout(function () {
            $('.filterbg').hide();
            $('.carInfo').hide();
            $('.carInfo').width(0);
        }, 800);
    });

})();

//========================================================================================================================
//+++++++++++++++++++++++++++++ 入口2（获取cnzz数据，今日与昨日跳转数和弹幕量和ip数，已废弃） ++++++++++++++++++++++++++++++++
//========================================================================================================================
// 获取今日和昨日跳转pv次数
// function getCnzzJumpTimes() {
//     let cnzzTxt = $('#cnzz_stat_icon_1278051049');
//     if (cnzzTxt != undefined && cnzzTxt.text() != "") {
//         cnzzTxt = cnzzTxt.text().split("|");
//         // console.info(cnzzTxt);
//         let todayJumpPV = cnzzTxt[2].trim();
//         todayJumpPV = todayJumpPV.substring(todayJumpPV.indexOf("今日PV[") + 5, todayJumpPV.length - 1);
//         let yesterdayJumpPV = cnzzTxt[4].trim();
//         yesterdayJumpPV = yesterdayJumpPV.substring(yesterdayJumpPV.indexOf("昨日PV[") + 5, yesterdayJumpPV.length - 1);
//         let todayJumpIp = cnzzTxt[1].trim();
//         todayJumpIp = todayJumpIp.substring(todayJumpIp.indexOf("今日IP[") + 5, todayJumpIp.length - 1);
//         getCnzzDanmuCount(todayJumpIp); //获取今日和昨日总弹幕数量pv
//         document.getElementById("lastday_jump_num").innerText = yesterdayJumpPV;
//         // document.getElementById("totalNum").setAttribute("total", todayJumpPV);
//         // totalNum($('#totalNum'), 500); //跳动渲染数据
//     } else {
//         delayCallback(1, 0);
//     }
// }

//获取今日和昨日总弹幕数量pv
// function getCnzzDanmuCount(todayJumpIp) { //cnzz_stat_icon_1278051049
//     let cnzzTxt = $('#cnzz_stat_icon_1278115154');
//     if (cnzzTxt != undefined && cnzzTxt.text() != "") {
//         cnzzTxt = cnzzTxt.text().split("|");
//         getCnzzWebSiteData();
//         let todayDanmuPV = cnzzTxt[2].trim();
//         todayDanmuPV = todayDanmuPV.substring(todayDanmuPV.indexOf("今日PV[") + 5, todayDanmuPV.length - 1);
//         let yesterdayDanmuPV = cnzzTxt[4].trim();
//         yesterdayDanmuPV = yesterdayDanmuPV.substring(yesterdayDanmuPV.indexOf("昨日PV[") + 5, yesterdayDanmuPV.length - 1);
//         let todayDanmuIp = cnzzTxt[1].trim();
//         todayDanmuIp = todayDanmuIp.substring(todayDanmuIp.indexOf("今日IP[") + 5, todayDanmuIp.length - 1);
//         document.getElementById("lastday_danmu_num").innerText = yesterdayDanmuPV;
//         $('#today_fire_num').text(todayDanmuIp + "/" + todayJumpIp + "(个)");
//         $('#today_fire_progress').attr("progress", Math.round(todayDanmuIp / todayJumpIp * 100) + "%");
//         // document.getElementById("totalDanmu").setAttribute("total", todayDanmuPV);
//         // totalNum($('#totalDanmu'), 1000); //跳动渲染数据
//     } else {
//         delayCallback(2, todayJumpIp);
//     }
// }
//cnzz的web网址站点统计
// function getCnzzWebSiteData() {
//     let cnzzTxt = $('#cnzz_stat_icon_1278032070');
//     if (cnzzTxt != undefined && cnzzTxt.text() != "") {
//         cnzzTxt = cnzzTxt.text().split("|");
//         // console.info(cnzzTxt);
//         let todayWebPV = cnzzTxt[2].trim();
//         todayWebPV = todayWebPV.substring(todayWebPV.indexOf("今日PV[") + 5, todayWebPV.length - 1);
//         let yesterdayWebPV = cnzzTxt[4].trim();
//         yesterdayWebPV = yesterdayWebPV.substring(yesterdayWebPV.indexOf("昨日PV[") + 5, yesterdayWebPV.length - 1);
//         let todayWebIp = cnzzTxt[1].trim();
//         todayWebIp = todayWebIp.substring(todayWebIp.indexOf("今日IP[") + 5, todayWebIp.length - 1);
//         let yesterdayWebIp = cnzzTxt[3].trim();
//         yesterdayWebIp = yesterdayWebIp.substring(yesterdayWebIp.indexOf("昨日IP[") + 5, yesterdayWebIp.length - 1);
//         // console.info(todayDanmu +"---"+yesterdayDanmuPV);
//         $('#web_today_ip').text(todayWebIp);
//         $('#web_today_pv').text(todayWebPV);
//         $('#web_yesterday_ip').text(yesterdayWebIp);
//         $('#web_yesterday_pv').text(yesterdayWebPV);
//     } else {
//         delayCallback(3, 0);
//     }
// }
// 延迟获取CNZZ页面的数据
// function delayCallback(code, todayJumpIp) {
//     if (code === 1) {
//         if (((new Date()).getTime() - initTime) / 1000 < 15) { //jump unless it's more than *s to check none of activity
//             setTimeout(getCnzzJumpTimes, 600);
//         } else {
//             console.warn('无法获取今日与昨日跳转次数数据！');
//         }
//     } else if (code === 2) {
//         if (((new Date()).getTime() - initTime) / 1000 < 15) { //jump unless it's more than *s to check none of activity
//             setTimeout(function() {
//                 getCnzzDanmuCount(todayJumpIp)
//             }, 500);
//         } else {
//             console.warn('无法获取今日与昨日跳转次数数据！');
//         }
//     } else if (code === 3) { //wait to check fire power
//         if (((new Date()).getTime() - initTime) / 1000 < 15) { //jump unless it's more than *s to check none of activity
//             setTimeout(getCnzzWebSiteData, 500);
//         } else {
//             console.warn('无法获取今日与昨日跳转次数数据！');
//         }
//     }
// }
// 获取今日和昨日跳转pv次数
// function getCnzzJumpTimes(){
//     fetch("https://online.cnzz.com/online/online_v3.php?id=1278051049&h=z3.cnzz.com&on=1&s=line",{
//         method: 'GET',
//         mode: 'cors',
//         cache: 'default',
//         credentials: 'omit',
//     }).then(res => {
//         return res.text();
//     }).then(cnzzTxt => {
//      cnzzTxt = cnzzTxt.split("|");
//      // console.info(cnzzTxt);
//      let todayJumpPV = cnzzTxt[2].trim();
//      todayJumpPV = todayJumpPV.substring(todayJumpPV.indexOf("今日PV[")+5,todayJumpPV.length-1);
//      let yesterdayJumpPV = cnzzTxt[4].trim();
//      yesterdayJumpPV = yesterdayJumpPV.substring(yesterdayJumpPV.indexOf("昨日PV[")+5, yesterdayJumpPV.length-1);
//      let todayJumpIp =  cnzzTxt[1].trim();
//      todayJumpIp = todayJumpIp.substring(todayJumpIp.indexOf("今日IP[")+5,todayJumpIp.length-1);
//      // console.info(todayJumpIp);
//      getCnzzDanmuCount(todayJumpIp);//获取今日和昨日总弹幕数量pv
//      document.getElementById("lastday_jump_num").innerText=yesterdayJumpPV;
//      document.getElementById("totalNum").setAttribute("total",todayJumpPV);
//      totalNum($('#totalNum'),100);//跳动渲染数据
//     }).catch(err => {
//         // console.error('请求错误', err);
//     })
// }
// getCnzzDanmuCount();
//获取今日和昨日总弹幕数量pv
//  function getCnzzDanmuCount(todayJumpIp){
//      fetch("https://online.cnzz.com/online/online_v3.php?id=1278115154&h=z6.cnzz.com&on=1&s=line",{
//          method: 'GET',
//          mode: 'cors',
//          cache: 'default',
//          credentials: 'omit',
//      }).then(res => {
//          return res.text();
//      }).then(cnzzTxt => {
//          getCnzzWebSiteData();
//          cnzzTxt = cnzzTxt.split("|");
//          // console.info(cnzzTxt);
//          let todayDanmuPV = cnzzTxt[2].trim();
//          todayDanmuPV = todayDanmuPV.substring(todayDanmuPV.indexOf("今日PV[")+5,todayDanmuPV.length-1);
//          let yesterdayDanmuPV = cnzzTxt[4].trim();
//          yesterdayDanmuPV = yesterdayDanmuPV.substring(yesterdayDanmuPV.indexOf("昨日PV[")+5, yesterdayDanmuPV.length-1);
//          let todayDanmuIp =  cnzzTxt[1].trim();
//          todayDanmuIp = todayDanmuIp.substring(todayDanmuIp.indexOf("今日IP[")+5,todayDanmuIp.length-1);
// // console.info(todayDanmu +"---"+yesterdayDanmuPV);
//          document.getElementById("lastday_danmu_num").innerText=yesterdayDanmuPV;
//          document.getElementById("totalDanmu").setAttribute("total",todayDanmuPV);
//          // console.info(parseInt(todayDanmuIp)/todayJumpIp);
// $('#today_fire_num').text(todayDanmuIp+"/"+todayJumpIp+"(个)");
// $('#today_fire_progress').attr("progress",Math.round(todayDanmuIp/todayJumpIp*100)+"%");
//          totalNum($('#totalDanmu'),200);//跳动渲染数据
//      }).catch(err => {
//          // console.error('请求错误', err);
//      })
//  }
// //cnzz的web网址站点统计
//    function getCnzzWebSiteData(){
//        fetch("https://online.cnzz.com/online/online_v3.php?id=1278032070&h=z6.cnzz.com&on=1&s=line",{
//            method: 'GET',
//            mode: 'cors',
//            cache: 'default',
//            credentials: 'omit',
//        }).then(res => {
//            return res.text();
//        }).then(cnzzTxt => {
//          GitHubDelayMonitor();//
//          AIDelayMonitor();//
//          cnzzTxt = cnzzTxt.split("|");
//          // console.info(cnzzTxt);
//          let todayWebPV = cnzzTxt[2].trim();
//          todayWebPV = todayWebPV.substring(todayWebPV.indexOf("今日PV[")+5,todayWebPV.length-1);
//          let yesterdayWebPV = cnzzTxt[4].trim();
//          yesterdayWebPV = yesterdayWebPV.substring(yesterdayWebPV.indexOf("昨日PV[")+5, yesterdayWebPV.length-1);
//          let todayWebIp =  cnzzTxt[1].trim();
//          todayWebIp = todayWebIp.substring(todayWebIp.indexOf("今日IP[")+5,todayWebIp.length-1);
//          let yesterdayWebIp =  cnzzTxt[3].trim();
//          yesterdayWebIp = yesterdayWebIp.substring(yesterdayWebIp.indexOf("昨日IP[")+5,yesterdayWebIp.length-1);
//      // console.info(todayDanmu +"---"+yesterdayDanmuPV);
//          $('#web_today_ip').text(todayWebIp);
//          $('#web_today_pv').text(todayWebPV);
//          $('#web_yesterday_ip').text(yesterdayWebIp);
//          $('#web_yesterday_pv').text(yesterdayWebPV);
//        }).catch(err => {
//            // console.error('请求错误', err);
//        })
//    }